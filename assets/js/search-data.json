{
  
    
        "post0": {
            "title": "Jupyter note books test blog",
            "content": "print(&quot;hello real world&quot;) . hello world .",
            "url": "https://jyustin.github.io/test-fastpages/python%20codes/week%200/2022/10/08/testbook.html",
            "relUrl": "/python%20codes/week%200/2022/10/08/testbook.html",
            "date": " • Oct 8, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "quizz project",
            "content": "week 2 this is my online quiz coded in python. Although it does not work on a jupyter notebook blog page, I can explain how it works. You simply just type in an input and the code will compare it to the preset correct value. If they match, the answer is considered correct. . UPDATE 9/1/2022: Used lists to tell user which problems they got wrong at the end of the quiz, as well as problems right. problems are also stored in a dictionary. . correct = 0 #this part used to keep track of correct answers and show how many correct and percentage at end of quiz int(correct) dict = { &quot;1&quot;: &quot;question 1: Name the Python output command mentioned in this lesson&quot;, &quot;2&quot;: &quot;question 2: If you see many lines of code in order, what would College Board call it?&quot;, &quot;3&quot;: &quot;question 3: Describe a keyword used in Python to define a function?&quot;, &quot;4&quot;: &quot;question 4: What command is used to include other functions that were previously developed?&quot;, } list = [] crlist = [] print(dict.get(&quot;1&quot;)) ans = input() if ans == &quot;print&quot;: #used to determine if answer was right or not print(ans, &quot;is correct!&quot;) correct = correct + 1 #keep track of correct answers crlist.append(&quot;1&quot;) else: print(ans, &quot;is wrong!&quot;) list.append(&quot;1&quot;) print(dict.get(&quot;2&quot;)) #basically code from top part, I don&#39;t rly know how to make it so I dont have to ans = input() if ans == &quot;sequence&quot;: print(ans,&quot;is correct!&quot;) correct = correct + 1 crlist.append(&quot;2&quot;) else: print(ans, &quot;is wrong!&quot;) list.append(&quot;2&quot;) print(dict.get(&quot;3&quot;)) ans = input() if ans == &quot;def&quot;: print(ans, &quot;is correct!&quot;) correct = correct + 1 crlist.append(&quot;3&quot;) else: print(ans, &quot;is wrong!&quot;) list.append(&quot;3&quot;) print(dict.get(&quot;4&quot;)) ans = input() if ans == &quot;import&quot;: print(ans, &quot;is correct!&quot;) correct = correct + 1 crlist.append(&quot;4&quot;) else: print(ans, &quot;is wrong!&quot;) list.append(&quot;4&quot;) (percentage) = (correct/4)*100 #use to calculate percentage of correct int(percentage) print(&quot;you got&quot;, correct, &quot;correct!&quot;) print(percentage, &quot;%&quot;) wrongs = &quot;, &quot;.join(list) rights = &quot;, &quot;.join(crlist) print(&quot;these questions are wrong:&quot;, wrongs) print(&quot;these questions are right:&quot;, rights) . question 1: Name the Python output command mentioned in this lesson print is correct! question 2: If you see many lines of code in order, what would College Board call it? def is wrong! question 3: Describe a keyword used in Python to define a function? def is correct! question 4: What command is used to include other functions that were previously developed? d is wrong! you got 2 correct! 50.0 % these questions are wrong: 2, 4 these questions are right: 1, 3 .",
            "url": "https://jyustin.github.io/test-fastpages/python%20codes/week%202/2022/10/08/quizz.html",
            "relUrl": "/python%20codes/week%202/2022/10/08/quizz.html",
            "date": " • Oct 8, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Poem(post In Docx)",
            "content": "Either you will . go through this door . or you will not go through. . If you go through . there is always the risk . of remembering your name. . Things look at you doubly . and you must look back . and let them happen. . If you do not go through . it is possible . to live worthily . to maintain your attitudes . to hold your position . to die bravely . but much will blind you, . much will evade you, . at what cost who knows? . The door itself makes no promises. . It is only a door. .",
            "url": "https://jyustin.github.io/test-fastpages/2022/10/08/poem(post-in-docx).html",
            "relUrl": "/2022/10/08/poem(post-in-docx).html",
            "date": " • Oct 8, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "notes for ap csp",
            "content": "week 1 note in a jupyter notebook .",
            "url": "https://jyustin.github.io/test-fastpages/jupyter/2022/10/08/notes.html",
            "relUrl": "/jupyter/2022/10/08/notes.html",
            "date": " • Oct 8, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "lists and dictionaries",
            "content": "InfoDb = [] # InfoDB is a data structure with expected Keys and Values # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;Justin&quot;, &quot;LastName&quot;: &quot;Nguyen&quot;, &quot;DOB&quot;: &quot;July 28 2006&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;supercatsd@gmail.com&quot;, &quot;favorite_fruit&quot;: &quot;apple&quot;, &quot;Owns_Cars&quot;: [&quot;none&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;bob&quot;, &quot;LastName&quot;: &quot;the&quot;, &quot;DOB&quot;: &quot;none&quot;, &quot;Residence&quot;: &quot;homeless&quot;, &quot;Email&quot;: &quot;no computer&quot;, &quot;favorite_fruit&quot;: &quot;banana&quot;, &quot;Owns_Cars&quot;: [&quot;expensive car&quot;] }) # print function: given a dictionary of InfoDb content def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print(&quot; t&quot;, &quot;Email: &quot;, d_rec[&quot;Email&quot;]) print(&quot; t&quot;, &quot;favorite fruit: &quot;, d_rec[&quot;favorite_fruit&quot;]) # for loop algorithm iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Justin Nguyen Residence: San Diego Birth Day: July 28 2006 Cars: none Email: supercatsd@gmail.com favorite fruit: apple bob the Residence: homeless Birth Day: none Cars: expensive car Email: no computer favorite fruit: banana . fruits = {} for i in range(5): fruit = input(&quot;Enter fruit: &quot;) color = input(&quot;Enter color: &quot;) fruits[fruit] = color print(&quot;the fruits you typed were: &quot;) for key in fruits: print(key) print(&quot;and the colors of those fruits were: &quot;) for key in fruits: print(key,&quot;:&quot;, fruits[key]) . the fruits you typed were: apple banana and the colors of those fruits were: apple : red banana : yello .",
            "url": "https://jyustin.github.io/test-fastpages/python%20codes/2022/10/08/lists-and-dictionaries.html",
            "relUrl": "/python%20codes/2022/10/08/lists-and-dictionaries.html",
            "date": " • Oct 8, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "lab quiz blog post",
            "content": "Outline . This is our blog for code.org 3 question quiz. fruit quiz 4 different choices, 1 correct answer, for each question. getting a correct answer will play a nice sound if a question is wrong you will be brought to a screen that tells you that your wrong, and can move on to the next question. At the end of the quiz will be 2 buttons. one writes the player&#39;s score, and the other allows the player to retake the quiz. fruit image at the start image corresponding with each choice display score at the end question 1: what color is an apple? answer: red wrong: orange wrong: blue wrong: purple question 2: when were bananas discovered? answer: 327 BC wrong: 1999 wrong: 1782 wrong: 2020 BC question 3: which one is not a fruit? answer: mushroom wrong: tomato wrong: melon wrong: strawberry struggles: adding the ability to see score at the end of the quiz was challenging, as we hadn&#39;t worked with javascript before and were confused by what to do, but eventually got it with a variable that adds onto itself each time the correct answer is selected. Working with code.org sometimes felt frustrating, as it was sometimes slower to use blocks than to type out code, but it is useful for learning javascript, as it gives us everything we need to start with. no need to look up things. . what . onEvent(&quot;button1&quot;, &quot;click&quot;, function() { setScreen(&quot;screen2&quot;); }); var x = 0; onEvent(&quot;button3&quot;, &quot;click&quot;, function( ) { x = x+1; setScreen(&quot;screen4&quot;); playSound(&quot;sound://category_achievements/lighthearted_bonus_objective_1.mp3&quot;); }); onEvent(&quot;button4&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen3&quot;); }); onEvent(&quot;button2&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen3&quot;); }); onEvent(&quot;button5&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen3&quot;); }); onEvent(&quot;button13&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen6&quot;); playSound(&quot;sound://category_achievements/peaceful_win_8.mp3&quot;); x = x+1; }); onEvent(&quot;button7&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen5&quot;); playSound(&quot;sound://category_achievements/lighthearted_bonus_objective_1.mp3&quot;); x = x+1; }); onEvent(&quot;button6&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen4&quot;); }); onEvent(&quot;button15&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen5&quot;); }); onEvent(&quot;button10&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen7&quot;); }); onEvent(&quot;button16&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen5&quot;); }); onEvent(&quot;button12&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen8&quot;); }); onEvent(&quot;button14&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen8&quot;); }); onEvent(&quot;button11&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen8&quot;); }); onEvent(&quot;button16&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen6&quot;); playSound(&quot;sound://category_achievements/peaceful_win_2.mp3&quot;); }); onEvent(&quot;button17&quot;, &quot;click&quot;, function( ) { write(&quot;you got &quot; + (x + &quot; right&quot;)); }); onEvent(&quot;button9&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen7&quot;); }); onEvent(&quot;button8&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen7&quot;); }); onEvent(&quot;retake&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen1&quot;); }); .",
            "url": "https://jyustin.github.io/test-fastpages/python%20codes/2022/10/08/labquizz.html",
            "relUrl": "/python%20codes/2022/10/08/labquizz.html",
            "date": " • Oct 8, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "js week 5",
            "content": "console.log(&quot;welcome to the apple counter&quot;); var apples = (20) if (apples &gt; 50) { console.log(&quot;we have too many apples&quot;); } else if (apples &lt; 10) { console.log(&quot;not enough apples&quot;); } else if (15 &lt; apples &lt; 25) { console.log(&quot;we have a good amount of apples&quot;); } else { console.log(&quot;we have a weird amount of apples&quot;); } . welcome to the apple counter we have a good amount of apples .",
            "url": "https://jyustin.github.io/test-fastpages/js%20codes/2022/10/08/jsweek5.html",
            "relUrl": "/js%20codes/2022/10/08/jsweek5.html",
            "date": " • Oct 8, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "js/html table",
            "content": "var msg = &quot;Hello, Worldo!&quot;; function logIt(output) { console.log(output); } function logItType(output) { console.log(typeof output, &quot;;&quot;, output); } // define a function to hold data for a Person function Person(name, ghID, classOf) { this.name = name; this.ghID = ghID; this.classOf = classOf; this.role = &quot;&quot;; } // define a setter for role in Person data Person.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, ghID: this.ghID, classOf: this.classOf, role: this.role}; const json = JSON.stringify(obj); return json; } // make a new Person and assign to variable teacher var teacher = new Person(&quot;Mr M&quot;, &quot;jm1021&quot;, 1977); // object type is easy to work with in JavaScript // output of Object and JSON/string associated with Teacher teacher.setRole(&quot;Teacher&quot;); // set the role var students = [ new Person(&quot;Justin&quot;, &quot;Jyustin&quot;, 2024), new Person(&quot;111&quot;, &quot;101&quot;, 1111), new Person(&quot;2222&quot;, &quot;220&quot;, 2222), ]; // define a classroom and build Classroom objects and json function Classroom(teacher, students){ // 1 teacher, many student // start Classroom with Teacher teacher.setRole(&quot;Teacher&quot;); this.teacher = teacher; this.classroom = [teacher]; // add each Student to Classroom this.students = students; this.students.forEach(student =&gt; { student.setRole(&quot;Student&quot;); this.classroom.push(student); }); // build json/string format of Classroom this.json = []; this.classroom.forEach(person =&gt; this.json.push(person.toJSON())); } // make a CompSci classroom from formerly defined teacher and students compsci = new Classroom(teacher, students); // define an HTML conversion &quot;method&quot; associated with Classroom Classroom.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid red;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em blue;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;u&gt;&quot; + &quot;Name&quot; + &quot;&lt;/u&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;u&gt;&quot; + &quot;GitHub ID&quot; + &quot;&lt;/u&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;u&gt;&quot; + &quot;Class Of&quot; + &quot;&lt;/u&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;u&gt;&quot; + &quot;Role&quot; + &quot;&lt;/u&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var row of compsci.classroom) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.ghID + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.classOf + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.role + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(compsci._toHtml()); . NameGitHub IDClass OfRole . Mr M | jm1021 | 1977 | Teacher | Justin | Jyustin | 2024 | Student | 111 | 101 | 1111 | Student | 2222 | 220 | 2222 | Student | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . .",
            "url": "https://jyustin.github.io/test-fastpages/js%20codes/2022/10/08/js.html",
            "relUrl": "/js%20codes/2022/10/08/js.html",
            "date": " • Oct 8, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "bash hacks",
            "content": "echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_dir=$HOME/thisisabashtest # change vscode to different name to test git clone export project=$project_dir/sympy # change APCSP to name of project from git clone export project_repo=&quot;https://github.com/sympy/sympy.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Using conditional statement to create a project directory and project Directory /home/id/thisisabashtest exists. Directory /home/id/thisisabashtest/sympy does not exists... cloning https://github.com/sympy/sympy.git Cloning into &#39;sympy&#39;... remote: Enumerating objects: 363105, done. remote: Counting objects: 100% (39/39), done. remote: Compressing objects: 100% (33/33), done. remote: Total 363105 (delta 17), reused 12 (delta 6), pack-reused 363066 Receiving objects: 100% (363105/363105), 161.52 MiB | 8.65 MiB/s, done. Resolving deltas: 100% (291308/291308), done. Directory /home/id/thisisabashtest/sympy exists. . Output exceeds the size limit. Open the full output data in a text editor Navigate to project, then navigate to area wwhere files were cloned /home/id/thisisabashtest/sympy . list top level or root of files with project pulled from github AUTHORS asv.conf.travis.json github_deploy_key.enc CODEOWNERS banner.svg isympy.py CODE_OF_CONDUCT.md bin pytest.ini CONTRIBUTING.md codecov.yml release LICENSE conftest.py setup.cfg MANIFEST.in coveragerc_travis setup.py PULL_REQUEST_TEMPLATE.md data setupegg.py README.md doc sympy asv.conf.actions.json examples . list again with hidden files pulled from github . .travis.yml asv.conf.travis.json isympy.py .. AUTHORS banner.svg pytest.ini .ci CODEOWNERS bin release .circleci CODE_OF_CONDUCT.md codecov.yml setup.cfg .editorconfig CONTRIBUTING.md conftest.py setup.py .git LICENSE coveragerc_travis setupegg.py .gitattributes MANIFEST.in data sympy .github PULL_REQUEST_TEMPLATE.md doc .gitignore README.md examples .mailmap asv.conf.actions.json github_deploy_key.enc ... -rw-r--r-- 1 id id 2088 Aug 25 16:50 setup.cfg -rwxr-xr-x 1 id id 15142 Aug 25 16:50 setup.py -rw-r--r-- 1 id id 49 Aug 25 16:50 setupegg.py drwxr-xr-x 42 id id 4096 Aug 25 16:50 sympy . Output exceeds the size limit. Open the full output data in a text editor Look for posts bash: cd: /home/id/thisisabashtest/sympy/_posts: No such file or directory /home/id/thisisabashtest/sympy total 268 -rw-r--r-- 1 id id 46763 Aug 25 16:50 AUTHORS -rw-r--r-- 1 id id 590 Aug 25 16:50 CODEOWNERS -rw-r--r-- 1 id id 3267 Aug 25 16:50 CODE_OF_CONDUCT.md -rw-r--r-- 1 id id 625 Aug 25 16:50 CONTRIBUTING.md -rw-r--r-- 1 id id 7885 Aug 25 16:50 LICENSE -rw-r--r-- 1 id id 496 Aug 25 16:50 MANIFEST.in -rw-r--r-- 1 id id 1168 Aug 25 16:50 PULL_REQUEST_TEMPLATE.md -rw-r--r-- 1 id id 11587 Aug 25 16:50 README.md -rw-r--r-- 1 id id 3141 Aug 25 16:50 asv.conf.actions.json -rw-r--r-- 1 id id 2774 Aug 25 16:50 asv.conf.travis.json -rw-r--r-- 1 id id 87868 Aug 25 16:50 banner.svg drwxr-xr-x 2 id id 4096 Aug 25 16:50 bin -rw-r--r-- 1 id id 196 Aug 25 16:50 codecov.yml -rw-r--r-- 1 id id 2944 Aug 25 16:50 conftest.py -rw-r--r-- 1 id id 316 Aug 25 16:50 coveragerc_travis drwxr-xr-x 3 id id 4096 Aug 25 16:50 data drwxr-xr-x 7 id id 4096 Aug 25 16:50 doc drwxr-xr-x 6 id id 4096 Aug 25 16:50 examples -rw-r--r-- 1 id id 4408 Aug 25 16:50 github_deploy_key.enc -rw-r--r-- 1 id id 11199 Aug 25 16:50 isympy.py -rw-r--r-- 1 id id 424 Aug 25 16:50 pytest.ini ... -rw-r--r-- 1 id id 2088 Aug 25 16:50 setup.cfg -rwxr-xr-x 1 id id 15142 Aug 25 16:50 setup.py -rw-r--r-- 1 id id 49 Aug 25 16:50 setupegg.py drwxr-xr-x 42 id id 4096 Aug 25 16:50 sympy . Output exceeds the size limit. Open the full output data in a text editor Look for notebooks bash: cd: /home/id/thisisabashtest/sympy/_notebooks: No such file or directory /home/id/thisisabashtest/sympy total 268 -rw-r--r-- 1 id id 46763 Aug 25 16:50 AUTHORS -rw-r--r-- 1 id id 590 Aug 25 16:50 CODEOWNERS -rw-r--r-- 1 id id 3267 Aug 25 16:50 CODE_OF_CONDUCT.md -rw-r--r-- 1 id id 625 Aug 25 16:50 CONTRIBUTING.md -rw-r--r-- 1 id id 7885 Aug 25 16:50 LICENSE -rw-r--r-- 1 id id 496 Aug 25 16:50 MANIFEST.in -rw-r--r-- 1 id id 1168 Aug 25 16:50 PULL_REQUEST_TEMPLATE.md -rw-r--r-- 1 id id 11587 Aug 25 16:50 README.md -rw-r--r-- 1 id id 3141 Aug 25 16:50 asv.conf.actions.json -rw-r--r-- 1 id id 2774 Aug 25 16:50 asv.conf.travis.json -rw-r--r-- 1 id id 87868 Aug 25 16:50 banner.svg drwxr-xr-x 2 id id 4096 Aug 25 16:50 bin -rw-r--r-- 1 id id 196 Aug 25 16:50 codecov.yml -rw-r--r-- 1 id id 2944 Aug 25 16:50 conftest.py -rw-r--r-- 1 id id 316 Aug 25 16:50 coveragerc_travis drwxr-xr-x 3 id id 4096 Aug 25 16:50 data drwxr-xr-x 7 id id 4096 Aug 25 16:50 doc drwxr-xr-x 6 id id 4096 Aug 25 16:50 examples -rw-r--r-- 1 id id 4408 Aug 25 16:50 github_deploy_key.enc -rw-r--r-- 1 id id 11199 Aug 25 16:50 isympy.py -rw-r--r-- 1 id id 424 Aug 25 16:50 pytest.ini ... -rw-r--r-- 1 id id 2088 Aug 25 16:50 setup.cfg -rwxr-xr-x 1 id id 15142 Aug 25 16:50 setup.py -rw-r--r-- 1 id id 49 Aug 25 16:50 setupegg.py drwxr-xr-x 42 id id 4096 Aug 25 16:50 sympy . Output exceeds the size limit. Open the full output data in a text editor Look for images in notebooks, print working directory, list files bash: cd: /home/id/thisisabashtest/sympy/_notebooks/images: No such file or directory /home/id/thisisabashtest/sympy total 268 -rw-r--r-- 1 id id 46763 Aug 25 16:50 AUTHORS -rw-r--r-- 1 id id 590 Aug 25 16:50 CODEOWNERS -rw-r--r-- 1 id id 3267 Aug 25 16:50 CODE_OF_CONDUCT.md -rw-r--r-- 1 id id 625 Aug 25 16:50 CONTRIBUTING.md -rw-r--r-- 1 id id 7885 Aug 25 16:50 LICENSE -rw-r--r-- 1 id id 496 Aug 25 16:50 MANIFEST.in -rw-r--r-- 1 id id 1168 Aug 25 16:50 PULL_REQUEST_TEMPLATE.md -rw-r--r-- 1 id id 11587 Aug 25 16:50 README.md -rw-r--r-- 1 id id 3141 Aug 25 16:50 asv.conf.actions.json -rw-r--r-- 1 id id 2774 Aug 25 16:50 asv.conf.travis.json -rw-r--r-- 1 id id 87868 Aug 25 16:50 banner.svg drwxr-xr-x 2 id id 4096 Aug 25 16:50 bin -rw-r--r-- 1 id id 196 Aug 25 16:50 codecov.yml -rw-r--r-- 1 id id 2944 Aug 25 16:50 conftest.py -rw-r--r-- 1 id id 316 Aug 25 16:50 coveragerc_travis drwxr-xr-x 3 id id 4096 Aug 25 16:50 data drwxr-xr-x 7 id id 4096 Aug 25 16:50 doc drwxr-xr-x 6 id id 4096 Aug 25 16:50 examples -rw-r--r-- 1 id id 4408 Aug 25 16:50 github_deploy_key.enc -rw-r--r-- 1 id id 11199 Aug 25 16:50 isympy.py -rw-r--r-- 1 id id 424 Aug 25 16:50 pytest.ini ... -rw-r--r-- 1 id id 2088 Aug 25 16:50 setup.cfg -rwxr-xr-x 1 id id 15142 Aug 25 16:50 setup.py -rw-r--r-- 1 id id 49 Aug 25 16:50 setupegg.py drwxr-xr-x 42 id id 4096 Aug 25 16:50 sympy . Output exceeds the size limit. Open the full output data in a text editor Navigate to project, then navigate to area wwhere files were cloned show the contents of README.md . SymPy . . . See the AUTHORS file for the list of authors. . And many more people helped on the SymPy mailing list, reported bugs, helped organize SymPy&#39;s participation in the Google Summer of Code, the Google Highly Open Participation Contest, Google Code-In, wrote and blogged about SymPy... ... also consider contributing all your changes back, so that we can incorporate it and all of us will benefit in the end. . end of README.md . Output exceeds the size limit. Open the full output data in a text editor Show the shell environment variables, key on left of equal value on right . SHELL=/bin/bash PYTHONUNBUFFERED=1 project=/home/id/thisisabashtest/sympy CONDA_EXE=/home/id/anaconda3/bin/conda _CE_M= APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=1 WSL_DISTRO_NAME=Ubuntu ELECTRON_RUN_AS_NODE=1 VSCODE_AMD_ENTRYPOINT=vs/workbench/api/node/extensionHostProcess NAME=Code PWD=/home/id/thisisabashtest/sympy LOGNAME=id CONDA_PREFIX=/home/id/anaconda3 MOTD_SHOWN=update-motd project_dir=/home/id/thisisabashtest HOME=/home/id LANG=C.UTF-8 WSL_INTEROP=/run/WSL/8_interop LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:.tar=01;31:.tgz=01;31:.arc=01;31:.arj=01;31:.taz=01;31:.lha=01;31:.lz4=01;31:.lzh=01;31:.lzma=01;31:.tlz=01;31:.txz=01;31:.tzo=01;31:.t7z=01;31:.zip=01;31:.z=01;31:.dz=01;31:.gz=01;31:.lrz=01;31:.lz=01;31:.lzo=01;31:.xz=01;31:.zst=01;31:.tzst=01;31:.bz2=01;31:.bz=01;31:.tbz=01;31:.tbz2=01;31:.tz=01;31:.deb=01;31:.rpm=01;31:.jar=01;31:.war=01;31:.ear=01;31:.sar=01;31:.rar=01;31:.alz=01;31:.ace=01;31:.zoo=01;31:.cpio=01;31:.7z=01;31:.rz=01;31:.cab=01;31:.wim=01;31:.swm=01;31:.dwm=01;31:.esd=01;31:.jpg=01;35:.jpeg=01;35:.mjpg=01;35:.mjpeg=01;35:.gif=01;35:.bmp=01;35:.pbm=01;35:.pgm=01;35:.ppm=01;35:.tga=01;35:.xbm=01;35:.xpm=01;35:.tif=01;35:.tiff=01;35:.png=01;35:.svg=01;35:.svgz=01;35:.mng=01;35:.pcx=01;35:.mov=01;35:.mpg=01;35:.mpeg=01;35:.m2v=01;35:.mkv=01;35:.webm=01;35:.ogm=01;35:.mp4=01;35:.m4v=01;35:.mp4v=01;35:.vob=01;35:.qt=01;35:.nuv=01;35:.wmv=01;35:.asf=01;35:.rm=01;35:.rmvb=01;35:.flc=01;35:.avi=01;35:.fli=01;35:.flv=01;35:.gl=01;35:.dl=01;35:.xcf=01;35:.xwd=01;35:.yuv=01;35:.cgm=01;35:.emf=01;35:.ogv=01;35:.ogx=01;35:.aac=00;36:.au=00;36:.flac=00;36:.m4a=00;36:.mid=00;36:.midi=00;36:.mka=00;36:.mp3=00;36:.mpc=00;36:.ogg=00;36:.ra=00;36:.wav=00;36:.oga=00;36:.opus=00;36:.spx=00;36:*.xspf=00;36: WAYLAND_DISPLAY=wayland-0 CONDA_PROMPT_MODIFIER=(base) PYDEVD_USE_FRAME_EVAL=NO posts=/home/id/thisisabashtest/sympy/_posts ... VSCODE_HANDLES_UNCAUGHT_ERRORS=true OLDPWD=/home/id/thisisabashtest/sympy VSCODE_IPC_HOOKCLI=/mnt/wslg/runtime-dir/vscode-ipc-0e02c704-d0af-493b-8de2-004642c092f5.sock=/usr/bin/env . show the secrets of .git total 256 -rw-r--r-- 1 id id 23 Aug 25 16:50 HEAD drwxr-xr-x 2 id id 4096 Aug 25 16:50 branches -rw-r--r-- 1 id id 259 Aug 25 16:50 config -rw-r--r-- 1 id id 73 Aug 25 16:50 description drwxr-xr-x 2 id id 4096 Aug 25 16:50 hooks -rw-r--r-- 1 id id 209328 Aug 25 16:50 index drwxr-xr-x 2 id id 4096 Aug 25 16:50 info drwxr-xr-x 3 id id 4096 Aug 25 16:50 logs drwxr-xr-x 4 id id 4096 Aug 25 16:50 objects -rw-r--r-- 1 id id 8197 Aug 25 16:50 packed-refs drwxr-xr-x 5 id id 4096 Aug 25 16:50 refs . look at config file [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true [remote &quot;origin&quot;] url = https://github.com/sympy/sympy.git fetch = +refs/heads/:refs/remotes/origin/ [branch &quot;master&quot;] remote = origin merge = refs/heads/master . BASH HACKS . we can use list function to list a certain set of files, then we can compare the version of those files to the latest release . | you can use conda list to list all of your packages, then use conda update PACKAGENAME to update any old packages . | in order to update a repository you could use some git commands like git add to add files, or git push to push any changes we make. . | there are lots of different commands that could be run from installation if we install everything in a bash script. for example, you could use ./file.sh to automatically execute the script if it is executable, so if we install something with a bash script, that same script could use this to automatically execute the script we got. . |",
            "url": "https://jyustin.github.io/test-fastpages/bash/week%201/2022/10/08/bashhacks.html",
            "relUrl": "/bash/week%201/2022/10/08/bashhacks.html",
            "date": " • Oct 8, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "apis",
            "content": "import requests url = &quot;https://google-translate1.p.rapidapi.com/language/translate/v2&quot; payload = &quot;q=Hello%2C%20world!&amp;target=es&amp;source=en&quot; headers = { &quot;content-type&quot;: &quot;application/x-www-form-urlencoded&quot;, &quot;Accept-Encoding&quot;: &quot;application/gzip&quot;, &quot;X-RapidAPI-Key&quot;: &quot;6a13c0a609mshb8a55b62f42e6d0p15ec9ejsnaf557400ec31&quot;, &quot;X-RapidAPI-Host&quot;: &quot;google-translate1.p.rapidapi.com&quot; } response = requests.request(&quot;POST&quot;, url, data=payload, headers=headers) print(response.text) . {&#34;data&#34;:{&#34;translations&#34;:[{&#34;translatedText&#34;:&#34;¡Hola Mundo!&#34;}]}} . import requests URL = &quot;https://rapidapi.p.rapidapi.com/api/Search/WebSearchAPI&quot; HEADERS = { &#39;x-rapidapi-host&#39;: &quot;contextualwebsearch-websearch-v1.p.rapidapi.com&quot;, &#39;x-rapidapi-key&#39;: &quot;6a13c0a609mshb8a55b62f42e6d0p15ec9ejsnaf557400ec31&quot; } query = &quot;computer science&quot; page_number = 1 page_size = 10 auto_correct = True safe_search = False querystring = {&quot;q&quot;: query, &quot;pageNumber&quot;: page_number, &quot;pageSize&quot;: page_size, &quot;autoCorrect&quot;: auto_correct, &quot;safeSearch&quot;: safe_search} response = requests.get(URL, headers=HEADERS, params=querystring).json() total_count = response[&quot;totalCount&quot;] for web_page in response[&quot;value&quot;]: url = web_page[&quot;url&quot;] title = web_page[&quot;title&quot;] description = web_page[&quot;description&quot;] body = web_page[&quot;body&quot;] date_published = web_page[&quot;datePublished&quot;] language = web_page[&quot;language&quot;] is_safe = web_page[&quot;isSafe&quot;] provider = web_page[&quot;provider&quot;][&quot;name&quot;] print(&quot;Url: {}. Title: {}.&quot;.format(url, title)) . Url: https://en.wikipedia.org/wiki/Computer_science. Title: Computer science - Wikipedia. Url: https://debugger.medium.com/tagged/computer-science. Title: Computer Science Debugger. Url: https://stackoverflow.com/tags/computer-science/info. Title: &#39;computer-science&#39; tag wiki - Stack Overflow. Url: https://lbre.stanford.edu/event-services/equipment-services/computers. Title: Computers | Land, Buildings &amp; Real Estate. Url: http://explore.appinventor.mit.edu/news/computer-science. Title: Computer Science Education Week: Going Beyond Code | Explore MIT App Inventor. Url: https://www.engr.cornell.edu/programs-departments/computer-science. Title: Computer Science | Cornell Engineering. Url: https://www.cmu.edu/admission/majors-programs/school-of-computer-science/computer-science. Title: Computer Science - Undergraduate Admission - Carnegie Mellon University. Url: http://guide.berkeley.edu/undergraduate/degree-programs/computer-science/. Title: Computer Science &lt; University of California, Berkeley. Url: https://www.energy.ox.ac.uk/departments_and_institutes/computer-science/. Title: Computer Science | Oxford Energy. Url: https://beaver.psu.edu/directory/computer-science. Title: Computer Science Directory | Penn State Beaver. .",
            "url": "https://jyustin.github.io/test-fastpages/js%20codes/2022/10/08/api.html",
            "relUrl": "/js%20codes/2022/10/08/api.html",
            "date": " • Oct 8, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Python RapidAPI",
            "content": "Python, RapidAPI Terms . APIs and tooling like Jupyter docs allows many opportunities in fields like Data Science. As more and more developers use APIs, they build standards in how you setup a client, send requests and receive information... . Covid19 RapidAPI Example . To begin the API journey. You need to find an API provider. . RapidAPI is a great option. You must setup and account, but there are many free options. | Goto this page for starters, the Corona virus World and India data- Under Code Snippets pick Python - Requests | . RapidAPI, you will select Python Requests type of code to work with you Notebook. . The url is the endpoint to which the API is directed | The headers is a dictionary data structure to send special messaging to the endpoint | The requests.request() python function is used to send a request and retrieve their responses | The response variable receives result of of the request in JSON text | . Next step, is to format the response according to your data science needs . &quot;&quot;&quot; Requests is a HTTP library for the Python programming language. The goal of the project is to make HTTP requests simpler and more human-friendly. &quot;&quot;&quot; import requests &quot;&quot;&quot; RapidAPI is the world&#39;s largest API Marketplace. Developers use Rapid API to discover and connect to thousands of APIs. &quot;&quot;&quot; url = &quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot; headers = { &quot;X-RapidAPI-Key&quot;: &quot;6a13c0a609mshb8a55b62f42e6d0p15ec9ejsnaf557400ec31&quot;, &#39;x-rapidapi-host&#39;: &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot; } # Request Covid Data response = requests.request(&quot;GET&quot;, url, headers=headers) print(response.json) # uncomment this line to see raw data # This code looks for &quot;world data&quot; print(&quot;World Totals&quot;) world = response.json().get(&#39;world_total&#39;) # turn response to json() so we can extract &quot;world_total&quot; for key, value in world.items(): # this finds key, value pairs in country print(key, value) print() # This code looks for USA in &quot;countries_stats&quot; print(&quot;Country Totals&quot;) countries = response.json().get(&#39;countries_stat&#39;) for country in countries: # countries is a list if country[&quot;country_name&quot;] == &quot;USA&quot;: # this filters for USA for key, value in country.items(): # this finds key, value pairs in country print(key, value) . &lt;bound method Response.json of &lt;Response [200]&gt;&gt; World Totals total_cases 509,268,964 new_cases 204,268 total_deaths 6,242,509 new_deaths 630 total_recovered 461,827,849 active_cases 41,198,606 serious_critical 42,510 total_cases_per_1m_population 65,334 deaths_per_1m_population 800.9 statistic_taken_at 2022-04-24 11:18:01 Country Totals country_name USA cases 82,649,779 deaths 1,018,316 region total_recovered 80,434,925 new_deaths 0 new_cases 0 serious_critical 1,465 active_cases 1,196,538 total_cases_per_1m_population 247,080 deaths_per_1m_population 3,044 total_tests 1,000,275,726 tests_per_1m_population 2,990,303 . Digital Coin Example . This example provides digital coin feedback (ie Bitcoin). It include popularity, price, symbols, etc. . A valid X-RapidAPI-Key is required. Look in code for link to RapidAPI page | Read all comments in code for further guidance | . # RapidAPI page https://rapidapi.com/Coinranking/api/coinranking1/ # Begin Rapid API Code import requests url = &quot;https://coinranking1.p.rapidapi.com/coins&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;desc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;jcmbea0fa2ff5msh7f14bf69be38ca6p175482jsn6c4988114560&quot;, # place your key here &quot;X-RapidAPI-Host&quot;: &quot;coinranking1.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) # End Rapid API Code json = response.json() # convert response to python json object # Observe data from an API. This is how data transports over the internet in a &quot;JSON&quot; text form # - The JSON &quot;text&quot; is formed in dictionary {} and list [] divisions # - To read the result, Data Scientist of Developer converts JSON into human readable form # - Review the first line, look for the keys -- &quot;status&quot; and &quot;data&quot; . {&#34;message&#34;:&#34;You are not subscribed to this API.&#34;} . Formatting Digital Coin example . JSON text transferred from the API in the previous cell was converted to a Python Dictionary called json. The &quot;coins&quot; in the dictionary contain a list of the most relevant data. Look at the code and comments to see how the original text is turned into something understandable. Additionally, there are error check to make sure we are starting the code with the expectation that the API was run correctly. . &quot;&quot;&quot; This cell is dependent on valid run of API above. - try and except code is making sure &quot;json&quot; was properly run above - inside second try is code that is used to process Coin API data Note. Run this cell repeatedly to format data without re-activating API &quot;&quot;&quot; try: print(&quot;JSON data is Python type: &quot; + str(type(json))) try: # Extracting Coins JSON status, if the API worked status = json.get(&#39;status&#39;) print(&quot;API status: &quot; + status) print() # Extracting Coins JSON data, data about the coins data = json.get(&#39;data&#39;) # Procedural abstraction of Print code for coins def print_coin(c): print(c[&quot;symbol&quot;], c[&quot;price&quot;]) print(&quot;Icon Url: &quot; + c[&quot;iconUrl&quot;]) print(&quot;Rank Url: &quot; + c[&quot;coinrankingUrl&quot;]) # Coins data was observed to be a list for coin in data[&#39;coins&#39;]: print_coin(coin) print() except: print(&quot;Did you insert a valid key in X-RapidAPI-Key of API cell above?&quot;) print(json) except: print(&quot;This cell is dependent on running API call in cell above!&quot;) . JSON data is Python type: &lt;class &#39;dict&#39;&gt; Did you insert a valid key in X-RapidAPI-Key of API cell above? {&#39;message&#39;: &#39;You are not subscribed to this API.&#39;} . Go deeper into APIs . Web Development vs Jupyter Notebook. A notebook is certainly a great place to start. But, for your end of Trimester project we want you to build the skill to reference and use APIs within your Project. Here are some resources to get you started with this journey. . In the Nighthawk Coders APCSP you can find an Overview and Examples using APIs:APCSP APIs menu- Using Covid RapidAPI JavaScript frontend API code in APCSP Fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-rapidapi.md | . | Making a Jokes API (this will next API tech talk) Frontend. JavaScript frontend code in APCSP fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-jokes.md | Backend Endpoints. Python code that allows Frontend access: https://github.com/nighthawkcoders/flask_portfolio/blob/main/api.py | Backend Jokes Management. Python code that support Create, Read, Update, Delete (CRUD): https://github.com/nighthawkcoders/flask_portfolio/blob/main/model_jokes.py | . | . Hacks . Find and use an API as part of your project. An API and a little coding logic will be a big step toward getting meaningful data for a project. There are many API providers, find one that might work for your project to complete this hack. When picking an API you are looking for something that will work with either JavaScript Fetch or Python Request. Here are some samples, these are not qualified in any way. . RapidAPI- GitHub Project | No Key APIs Article | Twitter Developer | Google Developer | Reddit Developer | . Show API and format results in either Web Page or Jupyter Notebook. Ultimately, I will expect that we do APIs in backend (Python/Flask). However, for this Hack you can pick your preference. We will discuss pros and cons in next API tech talk. .",
            "url": "https://jyustin.github.io/test-fastpages/techtalk/rapidapi",
            "relUrl": "/techtalk/rapidapi",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Big Idea 1 'Identifying and Correcting Errors'",
            "content": "College Board Big Idea 1 . Identifying and Correcting Errors (Unit 1.4) . Become familiar with types of errors and strategies to fixing them . Lightly Review Videos and take notes on topics with Blog | Complete assigned MCQ questions | . Here are some code segments you can practice fixing: . alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . The intended outcome is to determine where the letter is in the alphabet using a while loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i + 1) + &quot; letter in the alphabet&quot;) i += 1 . The letter a is the 1 letter in the alphabet . The intended outcome is to determine where the letter is in the alphabet using a for loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) for i in alphabetList: count = 1 if i == letter: count += alphabetList.index(letter) print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count) + &quot; letter in the alphabet&quot;) . The letter b is the 2 letter in the alphabet . This code outputs the even numbers from 0 - 10 using a while loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a while loop. . odds = [] i = 1 while i &lt;= 10: odds.append(i) i += 2 print(odds) . [1, 3, 5, 7, 9] . This code outputs the even numbers from 0 - 10 using a for loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a for loop. . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 2 == 1): odds.append(numbers[i]) print(odds) . [1, 3, 5, 7, 9] . The intended outcome is printing a number between 1 and 100 once, if it is a multiple of 2 or 5 . What values are outputted incorrectly. Why? | Make changes to get the intended outcome. | . numbers = [] newNumbers = [] i = 0 while i &lt; 100: numbers.append(i) i += 1 for i in numbers: if numbers[i] % 5 == 0: newNumbers.append(numbers[i]) elif numbers[i] % 2 == 0: newNumbers.append(numbers[i]) newNumbers.remove(0) print(newNumbers) . [2, 4, 5, 6, 8, 10, 12, 14, 15, 16, 18, 20, 22, 24, 25, 26, 28, 30, 32, 34, 35, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 55, 56, 58, 60, 62, 64, 65, 66, 68, 70, 72, 74, 75, 76, 78, 80, 82, 84, 85, 86, 88, 90, 92, 94, 95, 96, 98] . Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a “single” test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write “just enough” code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0 i = 1 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times while i == 1: item = input(&quot;Please select an item from the menu&quot;) total = menu[item] foo = input(&quot;are you sure you want, &quot; + item + &quot; (print y or n)&quot;) if foo == &quot;y&quot;: break elif foo == &quot;n&quot;: i == 1 #code should add the price of the menu items selected by the user print(total) . Menu burger $3.99 fries $1.99 drink $0.99 3.99 . Hacks . Now is a good time to think about Testing of your teams final project... . What errors may arise in your project? | What are some test cases that can be used? | Make sure to document any bugs you encounter and how you solved the problem. | What are “single” tests that you will perform on your project? Or, your part of the project? As Hack Design and Test plan action … Divide these “single” tests into Issues for Scrum Board prior to coding. FYI, related tests could be in same Issue by using markdown checkboxes to separate tests. | . | .",
            "url": "https://jyustin.github.io/test-fastpages/collegeboard/error",
            "relUrl": "/collegeboard/error",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "js/html table",
            "content": "var msg = &quot;Hello, Worldo!&quot;; function logIt(output) { console.log(output); } function logItType(output) { console.log(typeof output, &quot;;&quot;, output); } // define a function to hold data for a Person function Person(name, ghID, classOf) { this.name = name; this.ghID = ghID; this.classOf = classOf; this.role = &quot;&quot;; } // define a setter for role in Person data Person.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, ghID: this.ghID, classOf: this.classOf, role: this.role}; const json = JSON.stringify(obj); return json; } // make a new Person and assign to variable teacher var teacher = new Person(&quot;Mr M&quot;, &quot;jm1021&quot;, 1977); // object type is easy to work with in JavaScript // output of Object and JSON/string associated with Teacher teacher.setRole(&quot;Teacher&quot;); // set the role var students = [ new Person(&quot;Justin&quot;, &quot;Jyustin&quot;, 2024), new Person(&quot;111&quot;, &quot;101&quot;, 1111), new Person(&quot;2222&quot;, &quot;220&quot;, 2222), ]; // define a classroom and build Classroom objects and json function Classroom(teacher, students){ // 1 teacher, many student // start Classroom with Teacher teacher.setRole(&quot;Teacher&quot;); this.teacher = teacher; this.classroom = [teacher]; // add each Student to Classroom this.students = students; this.students.forEach(student =&gt; { student.setRole(&quot;Student&quot;); this.classroom.push(student); }); // build json/string format of Classroom this.json = []; this.classroom.forEach(person =&gt; this.json.push(person.toJSON())); } // make a CompSci classroom from formerly defined teacher and students compsci = new Classroom(teacher, students); // define an HTML conversion &quot;method&quot; associated with Classroom Classroom.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid red;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em blue;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;u&gt;&quot; + &quot;Name&quot; + &quot;&lt;/u&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;u&gt;&quot; + &quot;GitHub ID&quot; + &quot;&lt;/u&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;u&gt;&quot; + &quot;Class Of&quot; + &quot;&lt;/u&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;u&gt;&quot; + &quot;Role&quot; + &quot;&lt;/u&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var row of compsci.classroom) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.ghID + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.classOf + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.role + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(compsci._toHtml()); . NameGitHub IDClass OfRole . Mr M | jm1021 | 1977 | Teacher | Justin | Jyustin | 2024 | Student | 111 | 101 | 1111 | Student | 2222 | 220 | 2222 | Student | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . .",
            "url": "https://jyustin.github.io/test-fastpages/js%20codes/2022/09/27/js.html",
            "relUrl": "/js%20codes/2022/09/27/js.html",
            "date": " • Sep 27, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "agile methodology",
            "content": ". Agile Methodology hacks . Scrum Team layout: . Scrum Master: The scrum master helps to facilitate the sprint by ensuring that an agile framework is followed. He/she is committed to tracking issues and maintaining scrum boards, but should also remain flexible and open to opportunities for the team to improve their workflow. . DevOps: DevOps is the combination of cultural philosophies, practices, and tools that increases an team’s ability to deliver applications and services at high velocity: version control, integration, managing dependencies (requirements.txt), AWS deployment are some of the key functions that impact velocity. . Development Team: The development team can be comprised of all kinds of people including designers, writers, presenters, developers, etc. Two key roles in Web Development are … . Frontend Developer: A front-end developer builds the front-end portion of websites and web applications—that is, the part that users actually see and interact with. . Backend Developer: Back-end developers a build and maintain the mechanisms that process data and perform actions like data storage, security, and other server-side functions that you cannot see. . Scrum Board: . The Scrum Board contains issues that are assigned to individuals, each of these issues will have tangible deliverable links (code/video/…). Scrum Team will use Scrum Board to understand everyone’s ideas and efforts . 7 important skills . Creativity. Do you think outside our inside the box? how do you work with planned system? . | Critical thinking. Use critical thinking to step back and solve problems. deal with problems before they arise. . | Communication. EFFECTIVE COMMUNICATION IS VITAL. Communication is not just you communicating but also you interpreting what others communicate to you. . | Collaboration through Leadership. Leaders are big-picture thinkers who take various interests into account when making major decisions. . | Collaboration through teamwork. accept responsibilities, have trust in teammates, manage time wisely. work with team. . | Researching. Use research in all things. Use it before tackling problem to plan ahead. stop any problems before they arise. . | technical. Leaders are big-picture thinkers who take various interests into account when making major decisions. . |",
            "url": "https://jyustin.github.io/test-fastpages/markdown/week%202/2022/09/24/scrub.html",
            "relUrl": "/markdown/week%202/2022/09/24/scrub.html",
            "date": " • Sep 24, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "notes for focus and habits hacks",
            "content": "using positive psychology to improve life . give time for healthy habits -mindful moment -meditation . insights . 1: “this enterprise is possible” you can control your happiness. You control how happy you are. . although genes control 50% happiness other 50% s happiness you control . it is your own behaviors that make you happy . 2: you can become happy, but it takes work . if you build good, healthy habits into your routine, you will become happy. need to do it every day. . 3: recognize that your mind is not always telling you what makes you happy . ex: people think that salary makes one happy but in truth wealthy people are not all very happy. . minds lie to you about what you can do to be happier. . 4: establish social connections. being with others makes . ex: spending money on others makes you happy and the receivers happy. . 5: make time for gratitude every day. . when you talk to others, talk about gratitude . express gratitude to those who have helped you . focus on blessings, not hassle . 6: exercise is extremely good for your mental health. . 7: get enough sleep . 8: take time to be in the present moment. . 9: become wealthy in terms of time. . value your time more than becoming more rich. use your time to become healthy . gratitude list . 1: My family, who have always been there for me . 2: my country. I am grateful for the freedom I have here . 3: I am grateful to be in a nice neighborhood and have friendly neighbors to see every day . 4: My friends, who support me and help me through hard times . future goals . 1: improve at programming so that I can contribute to open source projects I like . 2: Study hard and become successful like my parents . 3: do simple exercise daily to keep my body in shape .",
            "url": "https://jyustin.github.io/test-fastpages/notes/2022/09/15/health.html",
            "relUrl": "/notes/2022/09/15/health.html",
            "date": " • Sep 15, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Jupyter note books test blog",
            "content": "print(&quot;hello real world&quot;) . hello world .",
            "url": "https://jyustin.github.io/test-fastpages/python%20codes/week%200/2022/09/14/testbook.html",
            "relUrl": "/python%20codes/week%200/2022/09/14/testbook.html",
            "date": " • Sep 14, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "quizz project",
            "content": "week 2 this is my online quiz coded in python. Although it does not work on a jupyter notebook blog page, I can explain how it works. You simply just type in an input and the code will compare it to the preset correct value. If they match, the answer is considered correct. . UPDATE 9/1/2022: Used lists to tell user which problems they got wrong at the end of the quiz, as well as problems right. problems are also stored in a dictionary. . correct = 0 #this part used to keep track of correct answers and show how many correct and percentage at end of quiz int(correct) dict = { &quot;1&quot;: &quot;question 1: Name the Python output command mentioned in this lesson&quot;, &quot;2&quot;: &quot;question 2: If you see many lines of code in order, what would College Board call it?&quot;, &quot;3&quot;: &quot;question 3: Describe a keyword used in Python to define a function?&quot;, &quot;4&quot;: &quot;question 4: What command is used to include other functions that were previously developed?&quot;, } list = [] crlist = [] print(dict.get(&quot;1&quot;)) ans = input() if ans == &quot;print&quot;: #used to determine if answer was right or not print(ans, &quot;is correct!&quot;) correct = correct + 1 #keep track of correct answers crlist.append(&quot;1&quot;) else: print(ans, &quot;is wrong!&quot;) list.append(&quot;1&quot;) print(dict.get(&quot;2&quot;)) #basically code from top part, I don&#39;t rly know how to make it so I dont have to ans = input() if ans == &quot;sequence&quot;: print(ans,&quot;is correct!&quot;) correct = correct + 1 crlist.append(&quot;2&quot;) else: print(ans, &quot;is wrong!&quot;) list.append(&quot;2&quot;) print(dict.get(&quot;3&quot;)) ans = input() if ans == &quot;def&quot;: print(ans, &quot;is correct!&quot;) correct = correct + 1 crlist.append(&quot;3&quot;) else: print(ans, &quot;is wrong!&quot;) list.append(&quot;3&quot;) print(dict.get(&quot;4&quot;)) ans = input() if ans == &quot;import&quot;: print(ans, &quot;is correct!&quot;) correct = correct + 1 crlist.append(&quot;4&quot;) else: print(ans, &quot;is wrong!&quot;) list.append(&quot;4&quot;) (percentage) = (correct/4)*100 #use to calculate percentage of correct int(percentage) print(&quot;you got&quot;, correct, &quot;correct!&quot;) print(percentage, &quot;%&quot;) wrongs = &quot;, &quot;.join(list) rights = &quot;, &quot;.join(crlist) print(&quot;these questions are wrong:&quot;, wrongs) print(&quot;these questions are right:&quot;, rights) . question 1: Name the Python output command mentioned in this lesson print is correct! question 2: If you see many lines of code in order, what would College Board call it? def is wrong! question 3: Describe a keyword used in Python to define a function? def is correct! question 4: What command is used to include other functions that were previously developed? d is wrong! you got 2 correct! 50.0 % these questions are wrong: 2, 4 these questions are right: 1, 3 .",
            "url": "https://jyustin.github.io/test-fastpages/python%20codes/week%202/2022/09/14/quizz.html",
            "relUrl": "/python%20codes/week%202/2022/09/14/quizz.html",
            "date": " • Sep 14, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Poem(post In Docx)",
            "content": "Either you will . go through this door . or you will not go through. . If you go through . there is always the risk . of remembering your name. . Things look at you doubly . and you must look back . and let them happen. . If you do not go through . it is possible . to live worthily . to maintain your attitudes . to hold your position . to die bravely . but much will blind you, . much will evade you, . at what cost who knows? . The door itself makes no promises. . It is only a door. .",
            "url": "https://jyustin.github.io/test-fastpages/2022/09/14/poem(post-in-docx).html",
            "relUrl": "/2022/09/14/poem(post-in-docx).html",
            "date": " • Sep 14, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "notes for ap csp",
            "content": "week 1 note in a jupyter notebook .",
            "url": "https://jyustin.github.io/test-fastpages/jupyter/2022/09/14/notes.html",
            "relUrl": "/jupyter/2022/09/14/notes.html",
            "date": " • Sep 14, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "lists and dictionaries",
            "content": "InfoDb = [] # InfoDB is a data structure with expected Keys and Values # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;Justin&quot;, &quot;LastName&quot;: &quot;Nguyen&quot;, &quot;DOB&quot;: &quot;July 28 2006&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;supercatsd@gmail.com&quot;, &quot;favorite_fruit&quot;: &quot;apple&quot;, &quot;Owns_Cars&quot;: [&quot;none&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;bob&quot;, &quot;LastName&quot;: &quot;the&quot;, &quot;DOB&quot;: &quot;none&quot;, &quot;Residence&quot;: &quot;homeless&quot;, &quot;Email&quot;: &quot;no computer&quot;, &quot;favorite_fruit&quot;: &quot;banana&quot;, &quot;Owns_Cars&quot;: [&quot;expensive car&quot;] }) # print function: given a dictionary of InfoDb content def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print(&quot; t&quot;, &quot;Email: &quot;, d_rec[&quot;Email&quot;]) print(&quot; t&quot;, &quot;favorite fruit: &quot;, d_rec[&quot;favorite_fruit&quot;]) # for loop algorithm iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Justin Nguyen Residence: San Diego Birth Day: July 28 2006 Cars: none Email: supercatsd@gmail.com favorite fruit: apple bob the Residence: homeless Birth Day: none Cars: expensive car Email: no computer favorite fruit: banana . fruits = {} for i in range(5): fruit = input(&quot;Enter fruit: &quot;) color = input(&quot;Enter color: &quot;) fruits[fruit] = color print(&quot;the fruits you typed were: &quot;) for key in fruits: print(key) print(&quot;and the colors of those fruits were: &quot;) for key in fruits: print(key,&quot;:&quot;, fruits[key]) . the fruits you typed were: apple banana and the colors of those fruits were: apple : red banana : yello .",
            "url": "https://jyustin.github.io/test-fastpages/python%20codes/2022/09/14/lists-and-dictionaries.html",
            "relUrl": "/python%20codes/2022/09/14/lists-and-dictionaries.html",
            "date": " • Sep 14, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "lab quiz blog post",
            "content": "Outline . This is our blog for code.org 3 question quiz. fruit quiz 4 different choices, 1 correct answer, for each question. getting a correct answer will play a nice sound if a question is wrong you will be brought to a screen that tells you that your wrong, and can move on to the next question. At the end of the quiz will be 2 buttons. one writes the player&#39;s score, and the other allows the player to retake the quiz. fruit image at the start image corresponding with each choice display score at the end question 1: what color is an apple? answer: red wrong: orange wrong: blue wrong: purple question 2: when were bananas discovered? answer: 327 BC wrong: 1999 wrong: 1782 wrong: 2020 BC question 3: which one is not a fruit? answer: mushroom wrong: tomato wrong: melon wrong: strawberry struggles: adding the ability to see score at the end of the quiz was challenging, as we hadn&#39;t worked with javascript before and were confused by what to do, but eventually got it with a variable that adds onto itself each time the correct answer is selected. Working with code.org sometimes felt frustrating, as it was sometimes slower to use blocks than to type out code, but it is useful for learning javascript, as it gives us everything we need to start with. no need to look up things. . onEvent(&quot;button1&quot;, &quot;click&quot;, function() { setScreen(&quot;screen2&quot;); }); var x = 0; onEvent(&quot;button3&quot;, &quot;click&quot;, function( ) { x = x+1; setScreen(&quot;screen4&quot;); playSound(&quot;sound://category_achievements/lighthearted_bonus_objective_1.mp3&quot;); }); onEvent(&quot;button4&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen3&quot;); }); onEvent(&quot;button2&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen3&quot;); }); onEvent(&quot;button5&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen3&quot;); }); onEvent(&quot;button13&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen6&quot;); playSound(&quot;sound://category_achievements/peaceful_win_8.mp3&quot;); x = x+1; }); onEvent(&quot;button7&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen5&quot;); playSound(&quot;sound://category_achievements/lighthearted_bonus_objective_1.mp3&quot;); x = x+1; }); onEvent(&quot;button6&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen4&quot;); }); onEvent(&quot;button15&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen5&quot;); }); onEvent(&quot;button10&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen7&quot;); }); onEvent(&quot;button16&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen5&quot;); }); onEvent(&quot;button12&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen8&quot;); }); onEvent(&quot;button14&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen8&quot;); }); onEvent(&quot;button11&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen8&quot;); }); onEvent(&quot;button16&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen6&quot;); playSound(&quot;sound://category_achievements/peaceful_win_2.mp3&quot;); }); onEvent(&quot;button17&quot;, &quot;click&quot;, function( ) { write(&quot;you got &quot; + (x + &quot; right&quot;)); }); onEvent(&quot;button9&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen7&quot;); }); onEvent(&quot;button8&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen7&quot;); }); onEvent(&quot;retake&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen1&quot;); }); .",
            "url": "https://jyustin.github.io/test-fastpages/python%20codes/2022/09/14/labquizz.html",
            "relUrl": "/python%20codes/2022/09/14/labquizz.html",
            "date": " • Sep 14, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "bash hacks",
            "content": "echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_dir=$HOME/thisisabashtest # change vscode to different name to test git clone export project=$project_dir/sympy # change APCSP to name of project from git clone export project_repo=&quot;https://github.com/sympy/sympy.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Using conditional statement to create a project directory and project Directory /home/id/thisisabashtest exists. Directory /home/id/thisisabashtest/sympy does not exists... cloning https://github.com/sympy/sympy.git Cloning into &#39;sympy&#39;... remote: Enumerating objects: 363105, done. remote: Counting objects: 100% (39/39), done. remote: Compressing objects: 100% (33/33), done. remote: Total 363105 (delta 17), reused 12 (delta 6), pack-reused 363066 Receiving objects: 100% (363105/363105), 161.52 MiB | 8.65 MiB/s, done. Resolving deltas: 100% (291308/291308), done. Directory /home/id/thisisabashtest/sympy exists. . Output exceeds the size limit. Open the full output data in a text editor Navigate to project, then navigate to area wwhere files were cloned /home/id/thisisabashtest/sympy . list top level or root of files with project pulled from github AUTHORS asv.conf.travis.json github_deploy_key.enc CODEOWNERS banner.svg isympy.py CODE_OF_CONDUCT.md bin pytest.ini CONTRIBUTING.md codecov.yml release LICENSE conftest.py setup.cfg MANIFEST.in coveragerc_travis setup.py PULL_REQUEST_TEMPLATE.md data setupegg.py README.md doc sympy asv.conf.actions.json examples . list again with hidden files pulled from github . .travis.yml asv.conf.travis.json isympy.py .. AUTHORS banner.svg pytest.ini .ci CODEOWNERS bin release .circleci CODE_OF_CONDUCT.md codecov.yml setup.cfg .editorconfig CONTRIBUTING.md conftest.py setup.py .git LICENSE coveragerc_travis setupegg.py .gitattributes MANIFEST.in data sympy .github PULL_REQUEST_TEMPLATE.md doc .gitignore README.md examples .mailmap asv.conf.actions.json github_deploy_key.enc ... -rw-r--r-- 1 id id 2088 Aug 25 16:50 setup.cfg -rwxr-xr-x 1 id id 15142 Aug 25 16:50 setup.py -rw-r--r-- 1 id id 49 Aug 25 16:50 setupegg.py drwxr-xr-x 42 id id 4096 Aug 25 16:50 sympy . Output exceeds the size limit. Open the full output data in a text editor Look for posts bash: cd: /home/id/thisisabashtest/sympy/_posts: No such file or directory /home/id/thisisabashtest/sympy total 268 -rw-r--r-- 1 id id 46763 Aug 25 16:50 AUTHORS -rw-r--r-- 1 id id 590 Aug 25 16:50 CODEOWNERS -rw-r--r-- 1 id id 3267 Aug 25 16:50 CODE_OF_CONDUCT.md -rw-r--r-- 1 id id 625 Aug 25 16:50 CONTRIBUTING.md -rw-r--r-- 1 id id 7885 Aug 25 16:50 LICENSE -rw-r--r-- 1 id id 496 Aug 25 16:50 MANIFEST.in -rw-r--r-- 1 id id 1168 Aug 25 16:50 PULL_REQUEST_TEMPLATE.md -rw-r--r-- 1 id id 11587 Aug 25 16:50 README.md -rw-r--r-- 1 id id 3141 Aug 25 16:50 asv.conf.actions.json -rw-r--r-- 1 id id 2774 Aug 25 16:50 asv.conf.travis.json -rw-r--r-- 1 id id 87868 Aug 25 16:50 banner.svg drwxr-xr-x 2 id id 4096 Aug 25 16:50 bin -rw-r--r-- 1 id id 196 Aug 25 16:50 codecov.yml -rw-r--r-- 1 id id 2944 Aug 25 16:50 conftest.py -rw-r--r-- 1 id id 316 Aug 25 16:50 coveragerc_travis drwxr-xr-x 3 id id 4096 Aug 25 16:50 data drwxr-xr-x 7 id id 4096 Aug 25 16:50 doc drwxr-xr-x 6 id id 4096 Aug 25 16:50 examples -rw-r--r-- 1 id id 4408 Aug 25 16:50 github_deploy_key.enc -rw-r--r-- 1 id id 11199 Aug 25 16:50 isympy.py -rw-r--r-- 1 id id 424 Aug 25 16:50 pytest.ini ... -rw-r--r-- 1 id id 2088 Aug 25 16:50 setup.cfg -rwxr-xr-x 1 id id 15142 Aug 25 16:50 setup.py -rw-r--r-- 1 id id 49 Aug 25 16:50 setupegg.py drwxr-xr-x 42 id id 4096 Aug 25 16:50 sympy . Output exceeds the size limit. Open the full output data in a text editor Look for notebooks bash: cd: /home/id/thisisabashtest/sympy/_notebooks: No such file or directory /home/id/thisisabashtest/sympy total 268 -rw-r--r-- 1 id id 46763 Aug 25 16:50 AUTHORS -rw-r--r-- 1 id id 590 Aug 25 16:50 CODEOWNERS -rw-r--r-- 1 id id 3267 Aug 25 16:50 CODE_OF_CONDUCT.md -rw-r--r-- 1 id id 625 Aug 25 16:50 CONTRIBUTING.md -rw-r--r-- 1 id id 7885 Aug 25 16:50 LICENSE -rw-r--r-- 1 id id 496 Aug 25 16:50 MANIFEST.in -rw-r--r-- 1 id id 1168 Aug 25 16:50 PULL_REQUEST_TEMPLATE.md -rw-r--r-- 1 id id 11587 Aug 25 16:50 README.md -rw-r--r-- 1 id id 3141 Aug 25 16:50 asv.conf.actions.json -rw-r--r-- 1 id id 2774 Aug 25 16:50 asv.conf.travis.json -rw-r--r-- 1 id id 87868 Aug 25 16:50 banner.svg drwxr-xr-x 2 id id 4096 Aug 25 16:50 bin -rw-r--r-- 1 id id 196 Aug 25 16:50 codecov.yml -rw-r--r-- 1 id id 2944 Aug 25 16:50 conftest.py -rw-r--r-- 1 id id 316 Aug 25 16:50 coveragerc_travis drwxr-xr-x 3 id id 4096 Aug 25 16:50 data drwxr-xr-x 7 id id 4096 Aug 25 16:50 doc drwxr-xr-x 6 id id 4096 Aug 25 16:50 examples -rw-r--r-- 1 id id 4408 Aug 25 16:50 github_deploy_key.enc -rw-r--r-- 1 id id 11199 Aug 25 16:50 isympy.py -rw-r--r-- 1 id id 424 Aug 25 16:50 pytest.ini ... -rw-r--r-- 1 id id 2088 Aug 25 16:50 setup.cfg -rwxr-xr-x 1 id id 15142 Aug 25 16:50 setup.py -rw-r--r-- 1 id id 49 Aug 25 16:50 setupegg.py drwxr-xr-x 42 id id 4096 Aug 25 16:50 sympy . Output exceeds the size limit. Open the full output data in a text editor Look for images in notebooks, print working directory, list files bash: cd: /home/id/thisisabashtest/sympy/_notebooks/images: No such file or directory /home/id/thisisabashtest/sympy total 268 -rw-r--r-- 1 id id 46763 Aug 25 16:50 AUTHORS -rw-r--r-- 1 id id 590 Aug 25 16:50 CODEOWNERS -rw-r--r-- 1 id id 3267 Aug 25 16:50 CODE_OF_CONDUCT.md -rw-r--r-- 1 id id 625 Aug 25 16:50 CONTRIBUTING.md -rw-r--r-- 1 id id 7885 Aug 25 16:50 LICENSE -rw-r--r-- 1 id id 496 Aug 25 16:50 MANIFEST.in -rw-r--r-- 1 id id 1168 Aug 25 16:50 PULL_REQUEST_TEMPLATE.md -rw-r--r-- 1 id id 11587 Aug 25 16:50 README.md -rw-r--r-- 1 id id 3141 Aug 25 16:50 asv.conf.actions.json -rw-r--r-- 1 id id 2774 Aug 25 16:50 asv.conf.travis.json -rw-r--r-- 1 id id 87868 Aug 25 16:50 banner.svg drwxr-xr-x 2 id id 4096 Aug 25 16:50 bin -rw-r--r-- 1 id id 196 Aug 25 16:50 codecov.yml -rw-r--r-- 1 id id 2944 Aug 25 16:50 conftest.py -rw-r--r-- 1 id id 316 Aug 25 16:50 coveragerc_travis drwxr-xr-x 3 id id 4096 Aug 25 16:50 data drwxr-xr-x 7 id id 4096 Aug 25 16:50 doc drwxr-xr-x 6 id id 4096 Aug 25 16:50 examples -rw-r--r-- 1 id id 4408 Aug 25 16:50 github_deploy_key.enc -rw-r--r-- 1 id id 11199 Aug 25 16:50 isympy.py -rw-r--r-- 1 id id 424 Aug 25 16:50 pytest.ini ... -rw-r--r-- 1 id id 2088 Aug 25 16:50 setup.cfg -rwxr-xr-x 1 id id 15142 Aug 25 16:50 setup.py -rw-r--r-- 1 id id 49 Aug 25 16:50 setupegg.py drwxr-xr-x 42 id id 4096 Aug 25 16:50 sympy . Output exceeds the size limit. Open the full output data in a text editor Navigate to project, then navigate to area wwhere files were cloned show the contents of README.md . SymPy . . . See the AUTHORS file for the list of authors. . And many more people helped on the SymPy mailing list, reported bugs, helped organize SymPy&#39;s participation in the Google Summer of Code, the Google Highly Open Participation Contest, Google Code-In, wrote and blogged about SymPy... ... also consider contributing all your changes back, so that we can incorporate it and all of us will benefit in the end. . end of README.md . Output exceeds the size limit. Open the full output data in a text editor Show the shell environment variables, key on left of equal value on right . SHELL=/bin/bash PYTHONUNBUFFERED=1 project=/home/id/thisisabashtest/sympy CONDA_EXE=/home/id/anaconda3/bin/conda _CE_M= APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=1 WSL_DISTRO_NAME=Ubuntu ELECTRON_RUN_AS_NODE=1 VSCODE_AMD_ENTRYPOINT=vs/workbench/api/node/extensionHostProcess NAME=Code PWD=/home/id/thisisabashtest/sympy LOGNAME=id CONDA_PREFIX=/home/id/anaconda3 MOTD_SHOWN=update-motd project_dir=/home/id/thisisabashtest HOME=/home/id LANG=C.UTF-8 WSL_INTEROP=/run/WSL/8_interop LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:.tar=01;31:.tgz=01;31:.arc=01;31:.arj=01;31:.taz=01;31:.lha=01;31:.lz4=01;31:.lzh=01;31:.lzma=01;31:.tlz=01;31:.txz=01;31:.tzo=01;31:.t7z=01;31:.zip=01;31:.z=01;31:.dz=01;31:.gz=01;31:.lrz=01;31:.lz=01;31:.lzo=01;31:.xz=01;31:.zst=01;31:.tzst=01;31:.bz2=01;31:.bz=01;31:.tbz=01;31:.tbz2=01;31:.tz=01;31:.deb=01;31:.rpm=01;31:.jar=01;31:.war=01;31:.ear=01;31:.sar=01;31:.rar=01;31:.alz=01;31:.ace=01;31:.zoo=01;31:.cpio=01;31:.7z=01;31:.rz=01;31:.cab=01;31:.wim=01;31:.swm=01;31:.dwm=01;31:.esd=01;31:.jpg=01;35:.jpeg=01;35:.mjpg=01;35:.mjpeg=01;35:.gif=01;35:.bmp=01;35:.pbm=01;35:.pgm=01;35:.ppm=01;35:.tga=01;35:.xbm=01;35:.xpm=01;35:.tif=01;35:.tiff=01;35:.png=01;35:.svg=01;35:.svgz=01;35:.mng=01;35:.pcx=01;35:.mov=01;35:.mpg=01;35:.mpeg=01;35:.m2v=01;35:.mkv=01;35:.webm=01;35:.ogm=01;35:.mp4=01;35:.m4v=01;35:.mp4v=01;35:.vob=01;35:.qt=01;35:.nuv=01;35:.wmv=01;35:.asf=01;35:.rm=01;35:.rmvb=01;35:.flc=01;35:.avi=01;35:.fli=01;35:.flv=01;35:.gl=01;35:.dl=01;35:.xcf=01;35:.xwd=01;35:.yuv=01;35:.cgm=01;35:.emf=01;35:.ogv=01;35:.ogx=01;35:.aac=00;36:.au=00;36:.flac=00;36:.m4a=00;36:.mid=00;36:.midi=00;36:.mka=00;36:.mp3=00;36:.mpc=00;36:.ogg=00;36:.ra=00;36:.wav=00;36:.oga=00;36:.opus=00;36:.spx=00;36:*.xspf=00;36: WAYLAND_DISPLAY=wayland-0 CONDA_PROMPT_MODIFIER=(base) PYDEVD_USE_FRAME_EVAL=NO posts=/home/id/thisisabashtest/sympy/_posts ... VSCODE_HANDLES_UNCAUGHT_ERRORS=true OLDPWD=/home/id/thisisabashtest/sympy VSCODE_IPC_HOOKCLI=/mnt/wslg/runtime-dir/vscode-ipc-0e02c704-d0af-493b-8de2-004642c092f5.sock=/usr/bin/env . show the secrets of .git total 256 -rw-r--r-- 1 id id 23 Aug 25 16:50 HEAD drwxr-xr-x 2 id id 4096 Aug 25 16:50 branches -rw-r--r-- 1 id id 259 Aug 25 16:50 config -rw-r--r-- 1 id id 73 Aug 25 16:50 description drwxr-xr-x 2 id id 4096 Aug 25 16:50 hooks -rw-r--r-- 1 id id 209328 Aug 25 16:50 index drwxr-xr-x 2 id id 4096 Aug 25 16:50 info drwxr-xr-x 3 id id 4096 Aug 25 16:50 logs drwxr-xr-x 4 id id 4096 Aug 25 16:50 objects -rw-r--r-- 1 id id 8197 Aug 25 16:50 packed-refs drwxr-xr-x 5 id id 4096 Aug 25 16:50 refs . look at config file [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true [remote &quot;origin&quot;] url = https://github.com/sympy/sympy.git fetch = +refs/heads/:refs/remotes/origin/ [branch &quot;master&quot;] remote = origin merge = refs/heads/master . BASH HACKS . we can use list function to list a certain set of files, then we can compare the version of those files to the latest release . | you can use conda list to list all of your packages, then use conda update PACKAGENAME to update any old packages . | in order to update a repository you could use some git commands like git add to add files, or git push to push any changes we make. . | there are lots of different commands that could be run from installation if we install everything in a bash script. for example, you could use ./file.sh to automatically execute the script if it is executable, so if we install something with a bash script, that same script could use this to automatically execute the script we got. . |",
            "url": "https://jyustin.github.io/test-fastpages/bash/week%201/2022/09/14/bashhacks.html",
            "relUrl": "/bash/week%201/2022/09/14/bashhacks.html",
            "date": " • Sep 14, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "computing purpose and collaboration notes",
            "content": ". apcsp week 4 notes . collaboration . collaboration helps to take code further . go by yourself if you want to go fast, go with others if you want to go far . pair share code: a pair works together to code. 1 person types in code, the other person comments on it . leave helpful comments on code to make it easier for others to understand . computing purpose . Computing innovation Categories applications, physical devices, systems SOCIAL MEDIA:allows people to communicate from long distances ECOMMERICE: allows user to ignore hassle of visiting store or looking for specific items . computing innovations solve problems . Computing innovations allow us to do what we would have never thought of before, solve problems or pursue interests in creative expression. . program input usually from User . Program input usually effects output. . programs accept input in different forms: . touch . audio . visual . text . ex: smartphone accepts input from touchscreen, buttons get input from touch, text (entering password) . programs written in event oriented environment . ex: what type of events can user trigger? think of things like mouse clicks, audio input, etc. . Input usually effects output, but not always. you need to sometimes do specific thing to trigger output . action may trigger event . code segments may be called by certain actions . program function . A program is only a collection of program statements that do something when run by computer . A code segment is a collection of program statements, so a code segment is part of a program . programs need to work for variety of inputs and situations . A program is a set of statements . A statement is a single command. . A group of statements is called a code segment . Program design and development . How is program developed? . start with idea . developed with specific purpose in mind . create plan. . sometimes development is exploratory. discovering the new. . developers investigate problem and reflect. investigation is important in development. . determine constraints, user concerns, requirements. . after investigating developers design program . -brainstorm ideas . -plan user experience . How is program developed? . developers decide on program requirements, then use outline to make prototype. . make sure program is tested. . refine and revise program based on reflection . test . working with others on development . program development is usually team based. . Individuals work on different components. . MAKE SURE TO CREDIT OTHERS. NAMES MUST BE WRITTEN IN DOCUMENTATION. GIVE CREDIT WHERE CREDIT IT DUE, EVEN FOR SMALL THINGS. . you can use comments to give credit . you can also use comment to notify bugs. . using other’s code segments is useful in saving time. You can use other’s code segments but you have to give credit in documentation. . Program documentation is a description of code segments, programs,and how it was developed. . Program documentation describes program, its requirements, its functions/methods, and it’s development, as well as contributors. . documentation improves productivity. it is helpful to remember things and tell others what you were thinking. . comments are the best way to do documentation. use good comments to remind yourself of stuff or help other programmers know what you were thinking . Use comments to help others who read your code . questions wrong . I got one question on the first quiz wrong because I misread the question. . I got 2 wrong on the 2nd quiz. It was sometimes hard to understand how sudo code worked and how it would run. The descriptions for the programs were also hard to understand. . I got all 3 right on the last quiz, but the 2nd question was kind of hard to understand. . .",
            "url": "https://jyustin.github.io/test-fastpages/markdown/week%203/2022/09/13/apcspnotes.html",
            "relUrl": "/markdown/week%203/2022/09/13/apcspnotes.html",
            "date": " • Sep 13, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "performance task",
            "content": "ideas for performance task: 1: simple game, perhaps snake (a line moves across a screen and grows when it passes berry units, but dies when it hits the border of the screen or hits itself) meets row 1: idea will require explaining of how code works meets row 2: requires snake data to be stored meets row 3: will need lists for berries meets row 4: will need this meets row 5: will definetly need to use some sort of algorithm for generating berries meets row 6: will need functions to work I think this is a good idea, but I feel like it will 2: tic-tac-toe against a cpu (play tic-tac-toe against a cpu that randomly selects tiles, implementing cpu could be hard) 3: text based adventure game (an adventure game based entirely on text by computer, pretty easy to build) .",
            "url": "https://jyustin.github.io/test-fastpages/markdown/week%203/2022/09/08/createperformancetask.html",
            "relUrl": "/markdown/week%203/2022/09/08/createperformancetask.html",
            "date": " • Sep 8, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "html experiment",
            "content": "my html experiments week 2 . while the theme is cool, it isn’t very functional as it is missing the links to pages in the top page. It isn’t possible to go to about me or tags or those things on this theme. The theme is also feels unprofessional, and there is a section at the top with a link to the github of the hacker theme. .",
            "url": "https://jyustin.github.io/test-fastpages/markdown/week%202/2022/08/31/html-documentation.html",
            "relUrl": "/markdown/week%202/2022/08/31/html-documentation.html",
            "date": " • Aug 31, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "md",
            "content": "week 0 . THIS IS A HEADER . this is a subheader . this is my first post using md . this is a link to ebay . this is italizized text . this is bold text . this should be a picture of an orange below . ok .",
            "url": "https://jyustin.github.io/test-fastpages/markdown/week%200/2022/08/19/md.html",
            "relUrl": "/markdown/week%200/2022/08/19/md.html",
            "date": " • Aug 19, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me (Justin)",
          "content": "Hello! my name is Justin! . I am currently taking AP CSP and this is my blog for the class. . my favorite fruit is watermelon . .",
          "url": "https://jyustin.github.io/test-fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
      ,"page3": {
          "title": "notes for ap csp",
          "content": "these are some notes . ###Lists and dictionaries . Lists and Dictionaries can collect information. You can add stuff to lists with .append(expression) . for_loop this is a loop that pulls data out of a list def for_loop(): print(“For loop output n”) for record in InfoDb: print_data(record) . while_loop iterates through stuff similarily to for_loop, but this time it only iterates through a set amount while loop algorithm contains an initial n and an index incrementing statement (n += 1) def while_loop(): print(“While loop output n”) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return . while_loop() . recursive loop this loops through itself by calling itself repeatedly. def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return . print(“Recursive loop output n”) recursive_loop(0) . HTML .",
          "url": "https://jyustin.github.io/test-fastpages/notes/",
          "relUrl": "/notes/",
          "date": ""
      }
      
  

  
      ,"page4": {
          "title": "personal csp progress",
          "content": "week progress . week 0 | intro to csp, tool setup, created fastpages blog | . week 1 | learned basic python, improved fastpages blog, learned bash | . week 2 | learned how to use lists and dictionaries, learned some html/css to improve blog page | .",
          "url": "https://jyustin.github.io/test-fastpages/personal-progress/",
          "relUrl": "/personal-progress/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
      ,"page9": {
          "title": "vocab for ap csp",
          "content": "#Vocab (For APCSP) . list: data type that can have data appended to it with .append(expression) . dictionary: data type that stores data in key:value pairs .",
          "url": "https://jyustin.github.io/test-fastpages/vocab/",
          "relUrl": "/vocab/",
          "date": ""
      }
      
  

  
      ,"page10": {
          "title": "Javascript week 5 hack",
          "content": "Here are links to my JS/HTML hacks for week 5 . javascript program . javascript table . .",
          "url": "https://jyustin.github.io/test-fastpages/js/",
          "relUrl": "/js/",
          "date": ""
      }
      
  

  
  

  
  

  

  
  

  
      ,"page15": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://jyustin.github.io/test-fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}