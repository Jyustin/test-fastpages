{
  
    
        "post0": {
            "title": "notes for focus and habits hacks",
            "content": "using positive psychology to improve life .",
            "url": "https://jyustin.github.io/test-fastpages/notes/2022/09/15/health.html",
            "relUrl": "/notes/2022/09/15/health.html",
            "date": " • Sep 15, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Jupyter note books test blog",
            "content": "print(&quot;hello real world&quot;) . hello world .",
            "url": "https://jyustin.github.io/test-fastpages/python%20codes/week%200/2022/09/14/testbook.html",
            "relUrl": "/python%20codes/week%200/2022/09/14/testbook.html",
            "date": " • Sep 14, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "quizz project",
            "content": "week 2 this is my online quiz coded in python. Although it does not work on a jupyter notebook blog page, I can explain how it works. You simply just type in an input and the code will compare it to the preset correct value. If they match, the answer is considered correct. . UPDATE 9/1/2022: Used lists to tell user which problems they got wrong at the end of the quiz, as well as problems right. problems are also stored in a dictionary. . correct = 0 #this part used to keep track of correct answers and show how many correct and percentage at end of quiz int(correct) dict = { &quot;1&quot;: &quot;question 1: Name the Python output command mentioned in this lesson&quot;, &quot;2&quot;: &quot;question 2: If you see many lines of code in order, what would College Board call it?&quot;, &quot;3&quot;: &quot;question 3: Describe a keyword used in Python to define a function?&quot;, &quot;4&quot;: &quot;question 4: What command is used to include other functions that were previously developed?&quot;, } list = [] crlist = [] print(dict.get(&quot;1&quot;)) ans = input() if ans == &quot;print&quot;: #used to determine if answer was right or not print(ans, &quot;is correct!&quot;) correct = correct + 1 #keep track of correct answers crlist.append(&quot;1&quot;) else: print(ans, &quot;is wrong!&quot;) list.append(&quot;1&quot;) print(dict.get(&quot;2&quot;)) #basically code from top part, I don&#39;t rly know how to make it so I dont have to ans = input() if ans == &quot;sequence&quot;: print(ans,&quot;is correct!&quot;) correct = correct + 1 crlist.append(&quot;2&quot;) else: print(ans, &quot;is wrong!&quot;) list.append(&quot;2&quot;) print(dict.get(&quot;3&quot;)) ans = input() if ans == &quot;def&quot;: print(ans, &quot;is correct!&quot;) correct = correct + 1 crlist.append(&quot;3&quot;) else: print(ans, &quot;is wrong!&quot;) list.append(&quot;3&quot;) print(dict.get(&quot;4&quot;)) ans = input() if ans == &quot;import&quot;: print(ans, &quot;is correct!&quot;) correct = correct + 1 crlist.append(&quot;4&quot;) else: print(ans, &quot;is wrong!&quot;) list.append(&quot;4&quot;) (percentage) = (correct/4)*100 #use to calculate percentage of correct int(percentage) print(&quot;you got&quot;, correct, &quot;correct!&quot;) print(percentage, &quot;%&quot;) wrongs = &quot;, &quot;.join(list) rights = &quot;, &quot;.join(crlist) print(&quot;these questions are wrong:&quot;, wrongs) print(&quot;these questions are right:&quot;, rights) . question 1: Name the Python output command mentioned in this lesson print is correct! question 2: If you see many lines of code in order, what would College Board call it? def is wrong! question 3: Describe a keyword used in Python to define a function? def is correct! question 4: What command is used to include other functions that were previously developed? d is wrong! you got 2 correct! 50.0 % these questions are wrong: 2, 4 these questions are right: 1, 3 .",
            "url": "https://jyustin.github.io/test-fastpages/python%20codes/week%202/2022/09/14/quizz.html",
            "relUrl": "/python%20codes/week%202/2022/09/14/quizz.html",
            "date": " • Sep 14, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Poem(post In Docx)",
            "content": "Either you will . go through this door . or you will not go through. . If you go through . there is always the risk . of remembering your name. . Things look at you doubly . and you must look back . and let them happen. . If you do not go through . it is possible . to live worthily . to maintain your attitudes . to hold your position . to die bravely . but much will blind you, . much will evade you, . at what cost who knows? . The door itself makes no promises. . It is only a door. .",
            "url": "https://jyustin.github.io/test-fastpages/2022/09/14/poem(post-in-docx).html",
            "relUrl": "/2022/09/14/poem(post-in-docx).html",
            "date": " • Sep 14, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "notes for ap csp",
            "content": "week 1 note in a jupyter notebook .",
            "url": "https://jyustin.github.io/test-fastpages/jupyter/2022/09/14/notes.html",
            "relUrl": "/jupyter/2022/09/14/notes.html",
            "date": " • Sep 14, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "lists and dictionaries",
            "content": "InfoDb = [] # InfoDB is a data structure with expected Keys and Values # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;Justin&quot;, &quot;LastName&quot;: &quot;Nguyen&quot;, &quot;DOB&quot;: &quot;July 28 2006&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;supercatsd@gmail.com&quot;, &quot;favorite_fruit&quot;: &quot;apple&quot;, &quot;Owns_Cars&quot;: [&quot;none&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;bob&quot;, &quot;LastName&quot;: &quot;the&quot;, &quot;DOB&quot;: &quot;none&quot;, &quot;Residence&quot;: &quot;homeless&quot;, &quot;Email&quot;: &quot;no computer&quot;, &quot;favorite_fruit&quot;: &quot;banana&quot;, &quot;Owns_Cars&quot;: [&quot;expensive car&quot;] }) # print function: given a dictionary of InfoDb content def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print(&quot; t&quot;, &quot;Email: &quot;, d_rec[&quot;Email&quot;]) print(&quot; t&quot;, &quot;favorite fruit: &quot;, d_rec[&quot;favorite_fruit&quot;]) # for loop algorithm iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Justin Nguyen Residence: San Diego Birth Day: July 28 2006 Cars: none Email: supercatsd@gmail.com favorite fruit: apple bob the Residence: homeless Birth Day: none Cars: expensive car Email: no computer favorite fruit: banana . fruits = {} for i in range(5): fruit = input(&quot;Enter fruit: &quot;) color = input(&quot;Enter color: &quot;) fruits[fruit] = color print(&quot;the fruits you typed were: &quot;) for key in fruits: print(key) print(&quot;and the colors of those fruits were: &quot;) for key in fruits: print(key,&quot;:&quot;, fruits[key]) . the fruits you typed were: apple banana and the colors of those fruits were: apple : red banana : yello .",
            "url": "https://jyustin.github.io/test-fastpages/python%20codes/2022/09/14/lists-and-dictionaries.html",
            "relUrl": "/python%20codes/2022/09/14/lists-and-dictionaries.html",
            "date": " • Sep 14, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "lab quiz blog post",
            "content": "Outline . This is our blog for code.org 3 question quiz. fruit quiz 4 different choices, 1 correct answer, for each question. getting a correct answer will play a nice sound if a question is wrong you will be brought to a screen that tells you that your wrong, and can move on to the next question. At the end of the quiz will be 2 buttons. one writes the player&#39;s score, and the other allows the player to retake the quiz. fruit image at the start image corresponding with each choice display score at the end question 1: what color is an apple? answer: red wrong: orange wrong: blue wrong: purple question 2: when were bananas discovered? answer: 327 BC wrong: 1999 wrong: 1782 wrong: 2020 BC question 3: which one is not a fruit? answer: mushroom wrong: tomato wrong: melon wrong: strawberry struggles: adding the ability to see score at the end of the quiz was challenging, as we hadn&#39;t worked with javascript before and were confused by what to do, but eventually got it with a variable that adds onto itself each time the correct answer is selected. Working with code.org sometimes felt frustrating, as it was sometimes slower to use blocks than to type out code, but it is useful for learning javascript, as it gives us everything we need to start with. no need to look up things. . onEvent(&quot;button1&quot;, &quot;click&quot;, function() { setScreen(&quot;screen2&quot;); }); var x = 0; onEvent(&quot;button3&quot;, &quot;click&quot;, function( ) { x = x+1; setScreen(&quot;screen4&quot;); playSound(&quot;sound://category_achievements/lighthearted_bonus_objective_1.mp3&quot;); }); onEvent(&quot;button4&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen3&quot;); }); onEvent(&quot;button2&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen3&quot;); }); onEvent(&quot;button5&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen3&quot;); }); onEvent(&quot;button13&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen6&quot;); playSound(&quot;sound://category_achievements/peaceful_win_8.mp3&quot;); x = x+1; }); onEvent(&quot;button7&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen5&quot;); playSound(&quot;sound://category_achievements/lighthearted_bonus_objective_1.mp3&quot;); x = x+1; }); onEvent(&quot;button6&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen4&quot;); }); onEvent(&quot;button15&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen5&quot;); }); onEvent(&quot;button10&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen7&quot;); }); onEvent(&quot;button16&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen5&quot;); }); onEvent(&quot;button12&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen8&quot;); }); onEvent(&quot;button14&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen8&quot;); }); onEvent(&quot;button11&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen8&quot;); }); onEvent(&quot;button16&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen6&quot;); playSound(&quot;sound://category_achievements/peaceful_win_2.mp3&quot;); }); onEvent(&quot;button17&quot;, &quot;click&quot;, function( ) { write(&quot;you got &quot; + (x + &quot; right&quot;)); }); onEvent(&quot;button9&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen7&quot;); }); onEvent(&quot;button8&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen7&quot;); }); onEvent(&quot;retake&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen1&quot;); }); .",
            "url": "https://jyustin.github.io/test-fastpages/python%20codes/2022/09/14/labquizz.html",
            "relUrl": "/python%20codes/2022/09/14/labquizz.html",
            "date": " • Sep 14, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "bash hacks",
            "content": "echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_dir=$HOME/thisisabashtest # change vscode to different name to test git clone export project=$project_dir/sympy # change APCSP to name of project from git clone export project_repo=&quot;https://github.com/sympy/sympy.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Using conditional statement to create a project directory and project Directory /home/id/thisisabashtest exists. Directory /home/id/thisisabashtest/sympy does not exists... cloning https://github.com/sympy/sympy.git Cloning into &#39;sympy&#39;... remote: Enumerating objects: 363105, done. remote: Counting objects: 100% (39/39), done. remote: Compressing objects: 100% (33/33), done. remote: Total 363105 (delta 17), reused 12 (delta 6), pack-reused 363066 Receiving objects: 100% (363105/363105), 161.52 MiB | 8.65 MiB/s, done. Resolving deltas: 100% (291308/291308), done. Directory /home/id/thisisabashtest/sympy exists. . Output exceeds the size limit. Open the full output data in a text editor Navigate to project, then navigate to area wwhere files were cloned /home/id/thisisabashtest/sympy . list top level or root of files with project pulled from github AUTHORS asv.conf.travis.json github_deploy_key.enc CODEOWNERS banner.svg isympy.py CODE_OF_CONDUCT.md bin pytest.ini CONTRIBUTING.md codecov.yml release LICENSE conftest.py setup.cfg MANIFEST.in coveragerc_travis setup.py PULL_REQUEST_TEMPLATE.md data setupegg.py README.md doc sympy asv.conf.actions.json examples . list again with hidden files pulled from github . .travis.yml asv.conf.travis.json isympy.py .. AUTHORS banner.svg pytest.ini .ci CODEOWNERS bin release .circleci CODE_OF_CONDUCT.md codecov.yml setup.cfg .editorconfig CONTRIBUTING.md conftest.py setup.py .git LICENSE coveragerc_travis setupegg.py .gitattributes MANIFEST.in data sympy .github PULL_REQUEST_TEMPLATE.md doc .gitignore README.md examples .mailmap asv.conf.actions.json github_deploy_key.enc ... -rw-r--r-- 1 id id 2088 Aug 25 16:50 setup.cfg -rwxr-xr-x 1 id id 15142 Aug 25 16:50 setup.py -rw-r--r-- 1 id id 49 Aug 25 16:50 setupegg.py drwxr-xr-x 42 id id 4096 Aug 25 16:50 sympy . Output exceeds the size limit. Open the full output data in a text editor Look for posts bash: cd: /home/id/thisisabashtest/sympy/_posts: No such file or directory /home/id/thisisabashtest/sympy total 268 -rw-r--r-- 1 id id 46763 Aug 25 16:50 AUTHORS -rw-r--r-- 1 id id 590 Aug 25 16:50 CODEOWNERS -rw-r--r-- 1 id id 3267 Aug 25 16:50 CODE_OF_CONDUCT.md -rw-r--r-- 1 id id 625 Aug 25 16:50 CONTRIBUTING.md -rw-r--r-- 1 id id 7885 Aug 25 16:50 LICENSE -rw-r--r-- 1 id id 496 Aug 25 16:50 MANIFEST.in -rw-r--r-- 1 id id 1168 Aug 25 16:50 PULL_REQUEST_TEMPLATE.md -rw-r--r-- 1 id id 11587 Aug 25 16:50 README.md -rw-r--r-- 1 id id 3141 Aug 25 16:50 asv.conf.actions.json -rw-r--r-- 1 id id 2774 Aug 25 16:50 asv.conf.travis.json -rw-r--r-- 1 id id 87868 Aug 25 16:50 banner.svg drwxr-xr-x 2 id id 4096 Aug 25 16:50 bin -rw-r--r-- 1 id id 196 Aug 25 16:50 codecov.yml -rw-r--r-- 1 id id 2944 Aug 25 16:50 conftest.py -rw-r--r-- 1 id id 316 Aug 25 16:50 coveragerc_travis drwxr-xr-x 3 id id 4096 Aug 25 16:50 data drwxr-xr-x 7 id id 4096 Aug 25 16:50 doc drwxr-xr-x 6 id id 4096 Aug 25 16:50 examples -rw-r--r-- 1 id id 4408 Aug 25 16:50 github_deploy_key.enc -rw-r--r-- 1 id id 11199 Aug 25 16:50 isympy.py -rw-r--r-- 1 id id 424 Aug 25 16:50 pytest.ini ... -rw-r--r-- 1 id id 2088 Aug 25 16:50 setup.cfg -rwxr-xr-x 1 id id 15142 Aug 25 16:50 setup.py -rw-r--r-- 1 id id 49 Aug 25 16:50 setupegg.py drwxr-xr-x 42 id id 4096 Aug 25 16:50 sympy . Output exceeds the size limit. Open the full output data in a text editor Look for notebooks bash: cd: /home/id/thisisabashtest/sympy/_notebooks: No such file or directory /home/id/thisisabashtest/sympy total 268 -rw-r--r-- 1 id id 46763 Aug 25 16:50 AUTHORS -rw-r--r-- 1 id id 590 Aug 25 16:50 CODEOWNERS -rw-r--r-- 1 id id 3267 Aug 25 16:50 CODE_OF_CONDUCT.md -rw-r--r-- 1 id id 625 Aug 25 16:50 CONTRIBUTING.md -rw-r--r-- 1 id id 7885 Aug 25 16:50 LICENSE -rw-r--r-- 1 id id 496 Aug 25 16:50 MANIFEST.in -rw-r--r-- 1 id id 1168 Aug 25 16:50 PULL_REQUEST_TEMPLATE.md -rw-r--r-- 1 id id 11587 Aug 25 16:50 README.md -rw-r--r-- 1 id id 3141 Aug 25 16:50 asv.conf.actions.json -rw-r--r-- 1 id id 2774 Aug 25 16:50 asv.conf.travis.json -rw-r--r-- 1 id id 87868 Aug 25 16:50 banner.svg drwxr-xr-x 2 id id 4096 Aug 25 16:50 bin -rw-r--r-- 1 id id 196 Aug 25 16:50 codecov.yml -rw-r--r-- 1 id id 2944 Aug 25 16:50 conftest.py -rw-r--r-- 1 id id 316 Aug 25 16:50 coveragerc_travis drwxr-xr-x 3 id id 4096 Aug 25 16:50 data drwxr-xr-x 7 id id 4096 Aug 25 16:50 doc drwxr-xr-x 6 id id 4096 Aug 25 16:50 examples -rw-r--r-- 1 id id 4408 Aug 25 16:50 github_deploy_key.enc -rw-r--r-- 1 id id 11199 Aug 25 16:50 isympy.py -rw-r--r-- 1 id id 424 Aug 25 16:50 pytest.ini ... -rw-r--r-- 1 id id 2088 Aug 25 16:50 setup.cfg -rwxr-xr-x 1 id id 15142 Aug 25 16:50 setup.py -rw-r--r-- 1 id id 49 Aug 25 16:50 setupegg.py drwxr-xr-x 42 id id 4096 Aug 25 16:50 sympy . Output exceeds the size limit. Open the full output data in a text editor Look for images in notebooks, print working directory, list files bash: cd: /home/id/thisisabashtest/sympy/_notebooks/images: No such file or directory /home/id/thisisabashtest/sympy total 268 -rw-r--r-- 1 id id 46763 Aug 25 16:50 AUTHORS -rw-r--r-- 1 id id 590 Aug 25 16:50 CODEOWNERS -rw-r--r-- 1 id id 3267 Aug 25 16:50 CODE_OF_CONDUCT.md -rw-r--r-- 1 id id 625 Aug 25 16:50 CONTRIBUTING.md -rw-r--r-- 1 id id 7885 Aug 25 16:50 LICENSE -rw-r--r-- 1 id id 496 Aug 25 16:50 MANIFEST.in -rw-r--r-- 1 id id 1168 Aug 25 16:50 PULL_REQUEST_TEMPLATE.md -rw-r--r-- 1 id id 11587 Aug 25 16:50 README.md -rw-r--r-- 1 id id 3141 Aug 25 16:50 asv.conf.actions.json -rw-r--r-- 1 id id 2774 Aug 25 16:50 asv.conf.travis.json -rw-r--r-- 1 id id 87868 Aug 25 16:50 banner.svg drwxr-xr-x 2 id id 4096 Aug 25 16:50 bin -rw-r--r-- 1 id id 196 Aug 25 16:50 codecov.yml -rw-r--r-- 1 id id 2944 Aug 25 16:50 conftest.py -rw-r--r-- 1 id id 316 Aug 25 16:50 coveragerc_travis drwxr-xr-x 3 id id 4096 Aug 25 16:50 data drwxr-xr-x 7 id id 4096 Aug 25 16:50 doc drwxr-xr-x 6 id id 4096 Aug 25 16:50 examples -rw-r--r-- 1 id id 4408 Aug 25 16:50 github_deploy_key.enc -rw-r--r-- 1 id id 11199 Aug 25 16:50 isympy.py -rw-r--r-- 1 id id 424 Aug 25 16:50 pytest.ini ... -rw-r--r-- 1 id id 2088 Aug 25 16:50 setup.cfg -rwxr-xr-x 1 id id 15142 Aug 25 16:50 setup.py -rw-r--r-- 1 id id 49 Aug 25 16:50 setupegg.py drwxr-xr-x 42 id id 4096 Aug 25 16:50 sympy . Output exceeds the size limit. Open the full output data in a text editor Navigate to project, then navigate to area wwhere files were cloned show the contents of README.md . SymPy . . . See the AUTHORS file for the list of authors. . And many more people helped on the SymPy mailing list, reported bugs, helped organize SymPy&#39;s participation in the Google Summer of Code, the Google Highly Open Participation Contest, Google Code-In, wrote and blogged about SymPy... ... also consider contributing all your changes back, so that we can incorporate it and all of us will benefit in the end. . end of README.md . Output exceeds the size limit. Open the full output data in a text editor Show the shell environment variables, key on left of equal value on right . SHELL=/bin/bash PYTHONUNBUFFERED=1 project=/home/id/thisisabashtest/sympy CONDA_EXE=/home/id/anaconda3/bin/conda _CE_M= APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=1 WSL_DISTRO_NAME=Ubuntu ELECTRON_RUN_AS_NODE=1 VSCODE_AMD_ENTRYPOINT=vs/workbench/api/node/extensionHostProcess NAME=Code PWD=/home/id/thisisabashtest/sympy LOGNAME=id CONDA_PREFIX=/home/id/anaconda3 MOTD_SHOWN=update-motd project_dir=/home/id/thisisabashtest HOME=/home/id LANG=C.UTF-8 WSL_INTEROP=/run/WSL/8_interop LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:.tar=01;31:.tgz=01;31:.arc=01;31:.arj=01;31:.taz=01;31:.lha=01;31:.lz4=01;31:.lzh=01;31:.lzma=01;31:.tlz=01;31:.txz=01;31:.tzo=01;31:.t7z=01;31:.zip=01;31:.z=01;31:.dz=01;31:.gz=01;31:.lrz=01;31:.lz=01;31:.lzo=01;31:.xz=01;31:.zst=01;31:.tzst=01;31:.bz2=01;31:.bz=01;31:.tbz=01;31:.tbz2=01;31:.tz=01;31:.deb=01;31:.rpm=01;31:.jar=01;31:.war=01;31:.ear=01;31:.sar=01;31:.rar=01;31:.alz=01;31:.ace=01;31:.zoo=01;31:.cpio=01;31:.7z=01;31:.rz=01;31:.cab=01;31:.wim=01;31:.swm=01;31:.dwm=01;31:.esd=01;31:.jpg=01;35:.jpeg=01;35:.mjpg=01;35:.mjpeg=01;35:.gif=01;35:.bmp=01;35:.pbm=01;35:.pgm=01;35:.ppm=01;35:.tga=01;35:.xbm=01;35:.xpm=01;35:.tif=01;35:.tiff=01;35:.png=01;35:.svg=01;35:.svgz=01;35:.mng=01;35:.pcx=01;35:.mov=01;35:.mpg=01;35:.mpeg=01;35:.m2v=01;35:.mkv=01;35:.webm=01;35:.ogm=01;35:.mp4=01;35:.m4v=01;35:.mp4v=01;35:.vob=01;35:.qt=01;35:.nuv=01;35:.wmv=01;35:.asf=01;35:.rm=01;35:.rmvb=01;35:.flc=01;35:.avi=01;35:.fli=01;35:.flv=01;35:.gl=01;35:.dl=01;35:.xcf=01;35:.xwd=01;35:.yuv=01;35:.cgm=01;35:.emf=01;35:.ogv=01;35:.ogx=01;35:.aac=00;36:.au=00;36:.flac=00;36:.m4a=00;36:.mid=00;36:.midi=00;36:.mka=00;36:.mp3=00;36:.mpc=00;36:.ogg=00;36:.ra=00;36:.wav=00;36:.oga=00;36:.opus=00;36:.spx=00;36:*.xspf=00;36: WAYLAND_DISPLAY=wayland-0 CONDA_PROMPT_MODIFIER=(base) PYDEVD_USE_FRAME_EVAL=NO posts=/home/id/thisisabashtest/sympy/_posts ... VSCODE_HANDLES_UNCAUGHT_ERRORS=true OLDPWD=/home/id/thisisabashtest/sympy VSCODE_IPC_HOOKCLI=/mnt/wslg/runtime-dir/vscode-ipc-0e02c704-d0af-493b-8de2-004642c092f5.sock=/usr/bin/env . show the secrets of .git total 256 -rw-r--r-- 1 id id 23 Aug 25 16:50 HEAD drwxr-xr-x 2 id id 4096 Aug 25 16:50 branches -rw-r--r-- 1 id id 259 Aug 25 16:50 config -rw-r--r-- 1 id id 73 Aug 25 16:50 description drwxr-xr-x 2 id id 4096 Aug 25 16:50 hooks -rw-r--r-- 1 id id 209328 Aug 25 16:50 index drwxr-xr-x 2 id id 4096 Aug 25 16:50 info drwxr-xr-x 3 id id 4096 Aug 25 16:50 logs drwxr-xr-x 4 id id 4096 Aug 25 16:50 objects -rw-r--r-- 1 id id 8197 Aug 25 16:50 packed-refs drwxr-xr-x 5 id id 4096 Aug 25 16:50 refs . look at config file [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true [remote &quot;origin&quot;] url = https://github.com/sympy/sympy.git fetch = +refs/heads/:refs/remotes/origin/ [branch &quot;master&quot;] remote = origin merge = refs/heads/master . BASH HACKS . we can use list function to list a certain set of files, then we can compare the version of those files to the latest release . | you can use conda list to list all of your packages, then use conda update PACKAGENAME to update any old packages . | in order to update a repository you could use some git commands like git add to add files, or git push to push any changes we make. . | there are lots of different commands that could be run from installation if we install everything in a bash script. for example, you could use ./file.sh to automatically execute the script if it is executable, so if we install something with a bash script, that same script could use this to automatically execute the script we got. . |",
            "url": "https://jyustin.github.io/test-fastpages/bash/week%201/2022/09/14/bashhacks.html",
            "relUrl": "/bash/week%201/2022/09/14/bashhacks.html",
            "date": " • Sep 14, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "computing purpose and collaboration notes",
            "content": "#apcsp week 4 notes ##collaboration collaboration helps to take code further go by yourself if you want to go fast, go with others if you want to go far pair share code: a pair works together to code. 1 person types in code, the other person comments on it leave helpful comments on code to make it easier for others to understand ##computing purpose Computing innovation Categories applications, physical devices, systems SOCIAL MEDIA:allows people to communicate from long distances ECOMMERICE: allows user to ignore hassle of visiting store or looking for specific items Computing innovations allow us to do what we would have never thought of before, solve problems or pursue interests in creative expression. computing innovations solve problems .",
            "url": "https://jyustin.github.io/test-fastpages/markdown/week%203/2022/09/13/apcspnotes.html",
            "relUrl": "/markdown/week%203/2022/09/13/apcspnotes.html",
            "date": " • Sep 13, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "performance task",
            "content": "ideas for performance task: 1: simple game, perhaps snake (a line moves across a screen and grows when it passes berry units, but dies when it hits the border of the screen or hits itself) meets row 1: idea will require explaining of how code works meets row 2: requires snake data to be stored meets row 3: will need lists for berries meets row 4: will need this meets row 5: will definetly need to use some sort of algorithm for generating berries meets row 6: will need functions to work I think this is a good idea, but I feel like it will 2: tic-tac-toe against a cpu (play tic-tac-toe against a cpu that randomly selects tiles, implementing cpu could be hard) 3: text based adventure game (an adventure game based entirely on text by computer, pretty easy to build) .",
            "url": "https://jyustin.github.io/test-fastpages/markdown/week%203/2022/09/08/createperformancetask.html",
            "relUrl": "/markdown/week%203/2022/09/08/createperformancetask.html",
            "date": " • Sep 8, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "html experiment",
            "content": "my html experiments week 2 . while the theme is cool, it isn’t very functional as it is missing the links to pages in the top page. It isn’t possible to go to about me or tags or those things on this theme. The theme is also feels unprofessional, and there is a section at the top with a link to the github of the hacker theme. .",
            "url": "https://jyustin.github.io/test-fastpages/markdown/week%202/2022/08/31/html-documentation.html",
            "relUrl": "/markdown/week%202/2022/08/31/html-documentation.html",
            "date": " • Aug 31, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "md",
            "content": "week 0 . THIS IS A HEADER . this is a subheader . this is my first post using md . this is a link to ebay . this is italizized text . this is bold text . this should be a picture of an orange below . ok .",
            "url": "https://jyustin.github.io/test-fastpages/markdown/week%200/2022/08/19/md.html",
            "relUrl": "/markdown/week%200/2022/08/19/md.html",
            "date": " • Aug 19, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me (Justin)",
          "content": "Hello! my name is Justin! . I am currently taking AP CSP and this is my blog for the class. . my favorite fruit is watermelon . .",
          "url": "https://jyustin.github.io/test-fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
      ,"page3": {
          "title": "notes for ap csp",
          "content": "these are some notes . ###Lists and dictionaries . Lists and Dictionaries can collect information. You can add stuff to lists with .append(expression) . for_loop this is a loop that pulls data out of a list def for_loop(): print(“For loop output n”) for record in InfoDb: print_data(record) . while_loop iterates through stuff similarily to for_loop, but this time it only iterates through a set amount while loop algorithm contains an initial n and an index incrementing statement (n += 1) def while_loop(): print(“While loop output n”) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return . while_loop() . recursive loop this loops through itself by calling itself repeatedly. def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return . print(“Recursive loop output n”) recursive_loop(0) . HTML .",
          "url": "https://jyustin.github.io/test-fastpages/notes/",
          "relUrl": "/notes/",
          "date": ""
      }
      
  

  
      ,"page4": {
          "title": "personal csp progress",
          "content": "week progress . week 0 | intro to csp, tool setup, created fastpages blog | . week 1 | learned basic python, improved fastpages blog, learned bash | . week 2 | learned how to use lists and dictionaries, learned some html/css to improve blog page | .",
          "url": "https://jyustin.github.io/test-fastpages/personal-progress/",
          "relUrl": "/personal-progress/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
      ,"page9": {
          "title": "vocab for ap csp",
          "content": "#Vocab (For APCSP) . list: data type that can have data appended to it with .append(expression) . dictionary: data type that stores data in key:value pairs .",
          "url": "https://jyustin.github.io/test-fastpages/vocab/",
          "relUrl": "/vocab/",
          "date": ""
      }
      
  

  
  

  
  

  
  

  
      ,"page13": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://jyustin.github.io/test-fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}