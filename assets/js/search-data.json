{
  
    
        "post0": {
            "title": "Jupyter note books test blog",
            "content": "print(&quot;hello real world&quot;) . hello world .",
            "url": "https://jyustin.github.io/test-fastpages/python%20codes/week%200/2022/12/13/testbook.html",
            "relUrl": "/python%20codes/week%200/2022/12/13/testbook.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "quizz project",
            "content": "week 2 this is my online quiz coded in python. Although it does not work on a jupyter notebook blog page, I can explain how it works. You simply just type in an input and the code will compare it to the preset correct value. If they match, the answer is considered correct. . UPDATE 9/1/2022: Used lists to tell user which problems they got wrong at the end of the quiz, as well as problems right. problems are also stored in a dictionary. . correct = 0 #this part used to keep track of correct answers and show how many correct and percentage at end of quiz int(correct) dict = { &quot;1&quot;: &quot;question 1: Name the Python output command mentioned in this lesson&quot;, &quot;2&quot;: &quot;question 2: If you see many lines of code in order, what would College Board call it?&quot;, &quot;3&quot;: &quot;question 3: Describe a keyword used in Python to define a function?&quot;, &quot;4&quot;: &quot;question 4: What command is used to include other functions that were previously developed?&quot;, } list = [] crlist = [] print(dict.get(&quot;1&quot;)) ans = input() if ans == &quot;print&quot;: #used to determine if answer was right or not print(ans, &quot;is correct!&quot;) correct = correct + 1 #keep track of correct answers crlist.append(&quot;1&quot;) else: print(ans, &quot;is wrong!&quot;) list.append(&quot;1&quot;) print(dict.get(&quot;2&quot;)) #basically code from top part, I don&#39;t rly know how to make it so I dont have to ans = input() if ans == &quot;sequence&quot;: print(ans,&quot;is correct!&quot;) correct = correct + 1 crlist.append(&quot;2&quot;) else: print(ans, &quot;is wrong!&quot;) list.append(&quot;2&quot;) print(dict.get(&quot;3&quot;)) ans = input() if ans == &quot;def&quot;: print(ans, &quot;is correct!&quot;) correct = correct + 1 crlist.append(&quot;3&quot;) else: print(ans, &quot;is wrong!&quot;) list.append(&quot;3&quot;) print(dict.get(&quot;4&quot;)) ans = input() if ans == &quot;import&quot;: print(ans, &quot;is correct!&quot;) correct = correct + 1 crlist.append(&quot;4&quot;) else: print(ans, &quot;is wrong!&quot;) list.append(&quot;4&quot;) (percentage) = (correct/4)*100 #use to calculate percentage of correct int(percentage) print(&quot;you got&quot;, correct, &quot;correct!&quot;) print(percentage, &quot;%&quot;) wrongs = &quot;, &quot;.join(list) rights = &quot;, &quot;.join(crlist) print(&quot;these questions are wrong:&quot;, wrongs) print(&quot;these questions are right:&quot;, rights) . question 1: Name the Python output command mentioned in this lesson print is correct! question 2: If you see many lines of code in order, what would College Board call it? def is wrong! question 3: Describe a keyword used in Python to define a function? def is correct! question 4: What command is used to include other functions that were previously developed? d is wrong! you got 2 correct! 50.0 % these questions are wrong: 2, 4 these questions are right: 1, 3 .",
            "url": "https://jyustin.github.io/test-fastpages/python%20codes/week%202/2022/12/13/quizz.html",
            "relUrl": "/python%20codes/week%202/2022/12/13/quizz.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Poem(post In Docx)",
            "content": "Either you will . go through this door . or you will not go through. . If you go through . there is always the risk . of remembering your name. . Things look at you doubly . and you must look back . and let them happen. . If you do not go through . it is possible . to live worthily . to maintain your attitudes . to hold your position . to die bravely . but much will blind you, . much will evade you, . at what cost who knows? . The door itself makes no promises. . It is only a door. .",
            "url": "https://jyustin.github.io/test-fastpages/2022/12/13/poem(post-in-docx).html",
            "relUrl": "/2022/12/13/poem(post-in-docx).html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "notes for ap csp",
            "content": "week 1 note in a jupyter notebook .",
            "url": "https://jyustin.github.io/test-fastpages/jupyter/2022/12/13/notes.html",
            "relUrl": "/jupyter/2022/12/13/notes.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "lists and dictionaries",
            "content": "InfoDb = [] # InfoDB is a data structure with expected Keys and Values # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;Justin&quot;, &quot;LastName&quot;: &quot;Nguyen&quot;, &quot;DOB&quot;: &quot;July 28 2006&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;supercatsd@gmail.com&quot;, &quot;favorite_fruit&quot;: &quot;apple&quot;, &quot;Owns_Cars&quot;: [&quot;none&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;bob&quot;, &quot;LastName&quot;: &quot;the&quot;, &quot;DOB&quot;: &quot;none&quot;, &quot;Residence&quot;: &quot;homeless&quot;, &quot;Email&quot;: &quot;no computer&quot;, &quot;favorite_fruit&quot;: &quot;banana&quot;, &quot;Owns_Cars&quot;: [&quot;expensive car&quot;] }) # print function: given a dictionary of InfoDb content def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print(&quot; t&quot;, &quot;Email: &quot;, d_rec[&quot;Email&quot;]) print(&quot; t&quot;, &quot;favorite fruit: &quot;, d_rec[&quot;favorite_fruit&quot;]) # for loop algorithm iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Justin Nguyen Residence: San Diego Birth Day: July 28 2006 Cars: none Email: supercatsd@gmail.com favorite fruit: apple bob the Residence: homeless Birth Day: none Cars: expensive car Email: no computer favorite fruit: banana . fruits = {} for i in range(5): fruit = input(&quot;Enter fruit: &quot;) color = input(&quot;Enter color: &quot;) fruits[fruit] = color print(&quot;the fruits you typed were: &quot;) for key in fruits: print(key) print(&quot;and the colors of those fruits were: &quot;) for key in fruits: print(key,&quot;:&quot;, fruits[key]) . the fruits you typed were: apple banana and the colors of those fruits were: apple : red banana : yello .",
            "url": "https://jyustin.github.io/test-fastpages/python%20codes/2022/12/13/lists-and-dictionaries.html",
            "relUrl": "/python%20codes/2022/12/13/lists-and-dictionaries.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "lab quiz blog post",
            "content": "Outline . This is our blog for code.org 3 question quiz. fruit quiz 4 different choices, 1 correct answer, for each question. getting a correct answer will play a nice sound if a question is wrong you will be brought to a screen that tells you that your wrong, and can move on to the next question. At the end of the quiz will be 2 buttons. one writes the player&#39;s score, and the other allows the player to retake the quiz. fruit image at the start image corresponding with each choice display score at the end question 1: what color is an apple? answer: red wrong: orange wrong: blue wrong: purple question 2: when were bananas discovered? answer: 327 BC wrong: 1999 wrong: 1782 wrong: 2020 BC question 3: which one is not a fruit? answer: mushroom wrong: tomato wrong: melon wrong: strawberry struggles: adding the ability to see score at the end of the quiz was challenging, as we hadn&#39;t worked with javascript before and were confused by what to do, but eventually got it with a variable that adds onto itself each time the correct answer is selected. Working with code.org sometimes felt frustrating, as it was sometimes slower to use blocks than to type out code, but it is useful for learning javascript, as it gives us everything we need to start with. no need to look up things. . what . onEvent(&quot;button1&quot;, &quot;click&quot;, function() { setScreen(&quot;screen2&quot;); }); var x = 0; onEvent(&quot;button3&quot;, &quot;click&quot;, function( ) { x = x+1; setScreen(&quot;screen4&quot;); playSound(&quot;sound://category_achievements/lighthearted_bonus_objective_1.mp3&quot;); }); onEvent(&quot;button4&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen3&quot;); }); onEvent(&quot;button2&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen3&quot;); }); onEvent(&quot;button5&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen3&quot;); }); onEvent(&quot;button13&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen6&quot;); playSound(&quot;sound://category_achievements/peaceful_win_8.mp3&quot;); x = x+1; }); onEvent(&quot;button7&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen5&quot;); playSound(&quot;sound://category_achievements/lighthearted_bonus_objective_1.mp3&quot;); x = x+1; }); onEvent(&quot;button6&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen4&quot;); }); onEvent(&quot;button15&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen5&quot;); }); onEvent(&quot;button10&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen7&quot;); }); onEvent(&quot;button16&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen5&quot;); }); onEvent(&quot;button12&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen8&quot;); }); onEvent(&quot;button14&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen8&quot;); }); onEvent(&quot;button11&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen8&quot;); }); onEvent(&quot;button16&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen6&quot;); playSound(&quot;sound://category_achievements/peaceful_win_2.mp3&quot;); }); onEvent(&quot;button17&quot;, &quot;click&quot;, function( ) { write(&quot;you got &quot; + (x + &quot; right&quot;)); }); onEvent(&quot;button9&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen7&quot;); }); onEvent(&quot;button8&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen7&quot;); }); onEvent(&quot;retake&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen1&quot;); }); .",
            "url": "https://jyustin.github.io/test-fastpages/python%20codes/2022/12/13/labquizz.html",
            "relUrl": "/python%20codes/2022/12/13/labquizz.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "js week 5",
            "content": "console.log(&quot;welcome to the apple counter&quot;); var apples = (20) if (apples &gt; 50) { console.log(&quot;we have too many apples&quot;); } else if (apples &lt; 10) { console.log(&quot;not enough apples&quot;); } else if (15 &lt; apples &lt; 25) { console.log(&quot;we have a good amount of apples&quot;); } else { console.log(&quot;we have a weird amount of apples&quot;); } . welcome to the apple counter we have a good amount of apples .",
            "url": "https://jyustin.github.io/test-fastpages/js%20codes/2022/12/13/jsweek5.html",
            "relUrl": "/js%20codes/2022/12/13/jsweek5.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "js/html table",
            "content": "var msg = &quot;Hello, Worldo!&quot;; function logIt(output) { console.log(output); } function logItType(output) { console.log(typeof output, &quot;;&quot;, output); } // define a function to hold data for a Person function Person(name, ghID, classOf) { this.name = name; this.ghID = ghID; this.classOf = classOf; this.role = &quot;&quot;; } // define a setter for role in Person data Person.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, ghID: this.ghID, classOf: this.classOf, role: this.role}; const json = JSON.stringify(obj); return json; } // make a new Person and assign to variable teacher var teacher = new Person(&quot;Mr M&quot;, &quot;jm1021&quot;, 1977); // object type is easy to work with in JavaScript // output of Object and JSON/string associated with Teacher teacher.setRole(&quot;Teacher&quot;); // set the role var students = [ new Person(&quot;Justin&quot;, &quot;Jyustin&quot;, 2024), new Person(&quot;111&quot;, &quot;101&quot;, 1111), new Person(&quot;2222&quot;, &quot;220&quot;, 2222), ]; // define a classroom and build Classroom objects and json function Classroom(teacher, students){ // 1 teacher, many student // start Classroom with Teacher teacher.setRole(&quot;Teacher&quot;); this.teacher = teacher; this.classroom = [teacher]; // add each Student to Classroom this.students = students; this.students.forEach(student =&gt; { student.setRole(&quot;Student&quot;); this.classroom.push(student); }); // build json/string format of Classroom this.json = []; this.classroom.forEach(person =&gt; this.json.push(person.toJSON())); } // make a CompSci classroom from formerly defined teacher and students compsci = new Classroom(teacher, students); // define an HTML conversion &quot;method&quot; associated with Classroom Classroom.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid red;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em blue;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;u&gt;&quot; + &quot;Name&quot; + &quot;&lt;/u&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;u&gt;&quot; + &quot;GitHub ID&quot; + &quot;&lt;/u&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;u&gt;&quot; + &quot;Class Of&quot; + &quot;&lt;/u&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;u&gt;&quot; + &quot;Role&quot; + &quot;&lt;/u&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var row of compsci.classroom) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.ghID + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.classOf + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.role + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(compsci._toHtml()); . NameGitHub IDClass OfRole . Mr M | jm1021 | 1977 | Teacher | Justin | Jyustin | 2024 | Student | 111 | 101 | 1111 | Student | 2222 | 220 | 2222 | Student | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . .",
            "url": "https://jyustin.github.io/test-fastpages/js%20codes/2022/12/13/js.html",
            "relUrl": "/js%20codes/2022/12/13/js.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "compsci technical buisness panel notes",
            "content": "Panel presented by: . Kathyleen Beveridge . Kris Porter . Kevin Warmerdam . helpful advice / notes . tech company mission statements: . HP INC mission statement: “create technology that makes life better for everyone, everywhere” . Qualcomm: inventing tech the world loves . Thermo fisher scientific: Enable our customers to make the world safer and cleaner . Working with others and is a important skill to have in CSP. . Kris porter did research on embedded networked sensors, which introduced him to things like linux and software development life cycle. . From a professional dev ops: dev ops are there to ensure that the release of websites or software are secure and everything works well. . success in the stem field comes with experience in the field . Continuous learning . developed twitter project like datacenter. . different companies have own definition of agile methodology. planning a large roadmap was done at qualcomm before projects. . working “agile” is important in current stem world. . start looking for other job when companies switch owners and such. . continuous learning and learning how to learn/ adapt to things is very useful in stem. . job interviews for tech companies are a massive hurdle to overcome in the stem field. . companies vary from having good workspace to being a “bad” enviorment. enviorments in companies often vary, its usually based on the user. . coding skills creates a good “problem solving” and critical thinking mindset. being a good problem solver and being able to use critical thinking is vital in the tech field. . Don’t be concerned about the news . final focus / what I learned . from this guest speaker event I learned that working with others and communicating are very important skills in the STEM field to have. . I also learned that continued learning and constantly pursuing more knowledge of programming and tech is very important to not only succeeding in the STEM workplace but also keeping motivation and drive to work in the STEM field. . knowing how to “learn” and adapt to problems is another skill that would be helpful to have in computer science. . I also learned that learning problem solving skills and critical thinking skills are a benefit of learning to code that helps out a lot both in the STEM field and in other jobs. . Lastly, I learned that agile methodology and planning are huge parts of projects in Stem and software development that should not be disregarded. . .",
            "url": "https://jyustin.github.io/test-fastpages/frontend/binary",
            "relUrl": "/frontend/binary",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "bash hacks",
            "content": "echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_dir=$HOME/thisisabashtest # change vscode to different name to test git clone export project=$project_dir/sympy # change APCSP to name of project from git clone export project_repo=&quot;https://github.com/sympy/sympy.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Using conditional statement to create a project directory and project Directory /home/id/thisisabashtest exists. Directory /home/id/thisisabashtest/sympy does not exists... cloning https://github.com/sympy/sympy.git Cloning into &#39;sympy&#39;... remote: Enumerating objects: 363105, done. remote: Counting objects: 100% (39/39), done. remote: Compressing objects: 100% (33/33), done. remote: Total 363105 (delta 17), reused 12 (delta 6), pack-reused 363066 Receiving objects: 100% (363105/363105), 161.52 MiB | 8.65 MiB/s, done. Resolving deltas: 100% (291308/291308), done. Directory /home/id/thisisabashtest/sympy exists. . Output exceeds the size limit. Open the full output data in a text editor Navigate to project, then navigate to area wwhere files were cloned /home/id/thisisabashtest/sympy . list top level or root of files with project pulled from github AUTHORS asv.conf.travis.json github_deploy_key.enc CODEOWNERS banner.svg isympy.py CODE_OF_CONDUCT.md bin pytest.ini CONTRIBUTING.md codecov.yml release LICENSE conftest.py setup.cfg MANIFEST.in coveragerc_travis setup.py PULL_REQUEST_TEMPLATE.md data setupegg.py README.md doc sympy asv.conf.actions.json examples . list again with hidden files pulled from github . .travis.yml asv.conf.travis.json isympy.py .. AUTHORS banner.svg pytest.ini .ci CODEOWNERS bin release .circleci CODE_OF_CONDUCT.md codecov.yml setup.cfg .editorconfig CONTRIBUTING.md conftest.py setup.py .git LICENSE coveragerc_travis setupegg.py .gitattributes MANIFEST.in data sympy .github PULL_REQUEST_TEMPLATE.md doc .gitignore README.md examples .mailmap asv.conf.actions.json github_deploy_key.enc ... -rw-r--r-- 1 id id 2088 Aug 25 16:50 setup.cfg -rwxr-xr-x 1 id id 15142 Aug 25 16:50 setup.py -rw-r--r-- 1 id id 49 Aug 25 16:50 setupegg.py drwxr-xr-x 42 id id 4096 Aug 25 16:50 sympy . Output exceeds the size limit. Open the full output data in a text editor Look for posts bash: cd: /home/id/thisisabashtest/sympy/_posts: No such file or directory /home/id/thisisabashtest/sympy total 268 -rw-r--r-- 1 id id 46763 Aug 25 16:50 AUTHORS -rw-r--r-- 1 id id 590 Aug 25 16:50 CODEOWNERS -rw-r--r-- 1 id id 3267 Aug 25 16:50 CODE_OF_CONDUCT.md -rw-r--r-- 1 id id 625 Aug 25 16:50 CONTRIBUTING.md -rw-r--r-- 1 id id 7885 Aug 25 16:50 LICENSE -rw-r--r-- 1 id id 496 Aug 25 16:50 MANIFEST.in -rw-r--r-- 1 id id 1168 Aug 25 16:50 PULL_REQUEST_TEMPLATE.md -rw-r--r-- 1 id id 11587 Aug 25 16:50 README.md -rw-r--r-- 1 id id 3141 Aug 25 16:50 asv.conf.actions.json -rw-r--r-- 1 id id 2774 Aug 25 16:50 asv.conf.travis.json -rw-r--r-- 1 id id 87868 Aug 25 16:50 banner.svg drwxr-xr-x 2 id id 4096 Aug 25 16:50 bin -rw-r--r-- 1 id id 196 Aug 25 16:50 codecov.yml -rw-r--r-- 1 id id 2944 Aug 25 16:50 conftest.py -rw-r--r-- 1 id id 316 Aug 25 16:50 coveragerc_travis drwxr-xr-x 3 id id 4096 Aug 25 16:50 data drwxr-xr-x 7 id id 4096 Aug 25 16:50 doc drwxr-xr-x 6 id id 4096 Aug 25 16:50 examples -rw-r--r-- 1 id id 4408 Aug 25 16:50 github_deploy_key.enc -rw-r--r-- 1 id id 11199 Aug 25 16:50 isympy.py -rw-r--r-- 1 id id 424 Aug 25 16:50 pytest.ini ... -rw-r--r-- 1 id id 2088 Aug 25 16:50 setup.cfg -rwxr-xr-x 1 id id 15142 Aug 25 16:50 setup.py -rw-r--r-- 1 id id 49 Aug 25 16:50 setupegg.py drwxr-xr-x 42 id id 4096 Aug 25 16:50 sympy . Output exceeds the size limit. Open the full output data in a text editor Look for notebooks bash: cd: /home/id/thisisabashtest/sympy/_notebooks: No such file or directory /home/id/thisisabashtest/sympy total 268 -rw-r--r-- 1 id id 46763 Aug 25 16:50 AUTHORS -rw-r--r-- 1 id id 590 Aug 25 16:50 CODEOWNERS -rw-r--r-- 1 id id 3267 Aug 25 16:50 CODE_OF_CONDUCT.md -rw-r--r-- 1 id id 625 Aug 25 16:50 CONTRIBUTING.md -rw-r--r-- 1 id id 7885 Aug 25 16:50 LICENSE -rw-r--r-- 1 id id 496 Aug 25 16:50 MANIFEST.in -rw-r--r-- 1 id id 1168 Aug 25 16:50 PULL_REQUEST_TEMPLATE.md -rw-r--r-- 1 id id 11587 Aug 25 16:50 README.md -rw-r--r-- 1 id id 3141 Aug 25 16:50 asv.conf.actions.json -rw-r--r-- 1 id id 2774 Aug 25 16:50 asv.conf.travis.json -rw-r--r-- 1 id id 87868 Aug 25 16:50 banner.svg drwxr-xr-x 2 id id 4096 Aug 25 16:50 bin -rw-r--r-- 1 id id 196 Aug 25 16:50 codecov.yml -rw-r--r-- 1 id id 2944 Aug 25 16:50 conftest.py -rw-r--r-- 1 id id 316 Aug 25 16:50 coveragerc_travis drwxr-xr-x 3 id id 4096 Aug 25 16:50 data drwxr-xr-x 7 id id 4096 Aug 25 16:50 doc drwxr-xr-x 6 id id 4096 Aug 25 16:50 examples -rw-r--r-- 1 id id 4408 Aug 25 16:50 github_deploy_key.enc -rw-r--r-- 1 id id 11199 Aug 25 16:50 isympy.py -rw-r--r-- 1 id id 424 Aug 25 16:50 pytest.ini ... -rw-r--r-- 1 id id 2088 Aug 25 16:50 setup.cfg -rwxr-xr-x 1 id id 15142 Aug 25 16:50 setup.py -rw-r--r-- 1 id id 49 Aug 25 16:50 setupegg.py drwxr-xr-x 42 id id 4096 Aug 25 16:50 sympy . Output exceeds the size limit. Open the full output data in a text editor Look for images in notebooks, print working directory, list files bash: cd: /home/id/thisisabashtest/sympy/_notebooks/images: No such file or directory /home/id/thisisabashtest/sympy total 268 -rw-r--r-- 1 id id 46763 Aug 25 16:50 AUTHORS -rw-r--r-- 1 id id 590 Aug 25 16:50 CODEOWNERS -rw-r--r-- 1 id id 3267 Aug 25 16:50 CODE_OF_CONDUCT.md -rw-r--r-- 1 id id 625 Aug 25 16:50 CONTRIBUTING.md -rw-r--r-- 1 id id 7885 Aug 25 16:50 LICENSE -rw-r--r-- 1 id id 496 Aug 25 16:50 MANIFEST.in -rw-r--r-- 1 id id 1168 Aug 25 16:50 PULL_REQUEST_TEMPLATE.md -rw-r--r-- 1 id id 11587 Aug 25 16:50 README.md -rw-r--r-- 1 id id 3141 Aug 25 16:50 asv.conf.actions.json -rw-r--r-- 1 id id 2774 Aug 25 16:50 asv.conf.travis.json -rw-r--r-- 1 id id 87868 Aug 25 16:50 banner.svg drwxr-xr-x 2 id id 4096 Aug 25 16:50 bin -rw-r--r-- 1 id id 196 Aug 25 16:50 codecov.yml -rw-r--r-- 1 id id 2944 Aug 25 16:50 conftest.py -rw-r--r-- 1 id id 316 Aug 25 16:50 coveragerc_travis drwxr-xr-x 3 id id 4096 Aug 25 16:50 data drwxr-xr-x 7 id id 4096 Aug 25 16:50 doc drwxr-xr-x 6 id id 4096 Aug 25 16:50 examples -rw-r--r-- 1 id id 4408 Aug 25 16:50 github_deploy_key.enc -rw-r--r-- 1 id id 11199 Aug 25 16:50 isympy.py -rw-r--r-- 1 id id 424 Aug 25 16:50 pytest.ini ... -rw-r--r-- 1 id id 2088 Aug 25 16:50 setup.cfg -rwxr-xr-x 1 id id 15142 Aug 25 16:50 setup.py -rw-r--r-- 1 id id 49 Aug 25 16:50 setupegg.py drwxr-xr-x 42 id id 4096 Aug 25 16:50 sympy . Output exceeds the size limit. Open the full output data in a text editor Navigate to project, then navigate to area wwhere files were cloned show the contents of README.md . SymPy . . . See the AUTHORS file for the list of authors. . And many more people helped on the SymPy mailing list, reported bugs, helped organize SymPy&#39;s participation in the Google Summer of Code, the Google Highly Open Participation Contest, Google Code-In, wrote and blogged about SymPy... ... also consider contributing all your changes back, so that we can incorporate it and all of us will benefit in the end. . end of README.md . Output exceeds the size limit. Open the full output data in a text editor Show the shell environment variables, key on left of equal value on right . SHELL=/bin/bash PYTHONUNBUFFERED=1 project=/home/id/thisisabashtest/sympy CONDA_EXE=/home/id/anaconda3/bin/conda _CE_M= APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=1 WSL_DISTRO_NAME=Ubuntu ELECTRON_RUN_AS_NODE=1 VSCODE_AMD_ENTRYPOINT=vs/workbench/api/node/extensionHostProcess NAME=Code PWD=/home/id/thisisabashtest/sympy LOGNAME=id CONDA_PREFIX=/home/id/anaconda3 MOTD_SHOWN=update-motd project_dir=/home/id/thisisabashtest HOME=/home/id LANG=C.UTF-8 WSL_INTEROP=/run/WSL/8_interop LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:.tar=01;31:.tgz=01;31:.arc=01;31:.arj=01;31:.taz=01;31:.lha=01;31:.lz4=01;31:.lzh=01;31:.lzma=01;31:.tlz=01;31:.txz=01;31:.tzo=01;31:.t7z=01;31:.zip=01;31:.z=01;31:.dz=01;31:.gz=01;31:.lrz=01;31:.lz=01;31:.lzo=01;31:.xz=01;31:.zst=01;31:.tzst=01;31:.bz2=01;31:.bz=01;31:.tbz=01;31:.tbz2=01;31:.tz=01;31:.deb=01;31:.rpm=01;31:.jar=01;31:.war=01;31:.ear=01;31:.sar=01;31:.rar=01;31:.alz=01;31:.ace=01;31:.zoo=01;31:.cpio=01;31:.7z=01;31:.rz=01;31:.cab=01;31:.wim=01;31:.swm=01;31:.dwm=01;31:.esd=01;31:.jpg=01;35:.jpeg=01;35:.mjpg=01;35:.mjpeg=01;35:.gif=01;35:.bmp=01;35:.pbm=01;35:.pgm=01;35:.ppm=01;35:.tga=01;35:.xbm=01;35:.xpm=01;35:.tif=01;35:.tiff=01;35:.png=01;35:.svg=01;35:.svgz=01;35:.mng=01;35:.pcx=01;35:.mov=01;35:.mpg=01;35:.mpeg=01;35:.m2v=01;35:.mkv=01;35:.webm=01;35:.ogm=01;35:.mp4=01;35:.m4v=01;35:.mp4v=01;35:.vob=01;35:.qt=01;35:.nuv=01;35:.wmv=01;35:.asf=01;35:.rm=01;35:.rmvb=01;35:.flc=01;35:.avi=01;35:.fli=01;35:.flv=01;35:.gl=01;35:.dl=01;35:.xcf=01;35:.xwd=01;35:.yuv=01;35:.cgm=01;35:.emf=01;35:.ogv=01;35:.ogx=01;35:.aac=00;36:.au=00;36:.flac=00;36:.m4a=00;36:.mid=00;36:.midi=00;36:.mka=00;36:.mp3=00;36:.mpc=00;36:.ogg=00;36:.ra=00;36:.wav=00;36:.oga=00;36:.opus=00;36:.spx=00;36:*.xspf=00;36: WAYLAND_DISPLAY=wayland-0 CONDA_PROMPT_MODIFIER=(base) PYDEVD_USE_FRAME_EVAL=NO posts=/home/id/thisisabashtest/sympy/_posts ... VSCODE_HANDLES_UNCAUGHT_ERRORS=true OLDPWD=/home/id/thisisabashtest/sympy VSCODE_IPC_HOOKCLI=/mnt/wslg/runtime-dir/vscode-ipc-0e02c704-d0af-493b-8de2-004642c092f5.sock=/usr/bin/env . show the secrets of .git total 256 -rw-r--r-- 1 id id 23 Aug 25 16:50 HEAD drwxr-xr-x 2 id id 4096 Aug 25 16:50 branches -rw-r--r-- 1 id id 259 Aug 25 16:50 config -rw-r--r-- 1 id id 73 Aug 25 16:50 description drwxr-xr-x 2 id id 4096 Aug 25 16:50 hooks -rw-r--r-- 1 id id 209328 Aug 25 16:50 index drwxr-xr-x 2 id id 4096 Aug 25 16:50 info drwxr-xr-x 3 id id 4096 Aug 25 16:50 logs drwxr-xr-x 4 id id 4096 Aug 25 16:50 objects -rw-r--r-- 1 id id 8197 Aug 25 16:50 packed-refs drwxr-xr-x 5 id id 4096 Aug 25 16:50 refs . look at config file [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true [remote &quot;origin&quot;] url = https://github.com/sympy/sympy.git fetch = +refs/heads/:refs/remotes/origin/ [branch &quot;master&quot;] remote = origin merge = refs/heads/master . BASH HACKS . we can use list function to list a certain set of files, then we can compare the version of those files to the latest release . | you can use conda list to list all of your packages, then use conda update PACKAGENAME to update any old packages . | in order to update a repository you could use some git commands like git add to add files, or git push to push any changes we make. . | there are lots of different commands that could be run from installation if we install everything in a bash script. for example, you could use ./file.sh to automatically execute the script if it is executable, so if we install something with a bash script, that same script could use this to automatically execute the script we got. . |",
            "url": "https://jyustin.github.io/test-fastpages/bash/week%201/2022/12/13/bashhacks.html",
            "relUrl": "/bash/week%201/2022/12/13/bashhacks.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "apis",
            "content": "import requests url = &quot;https://google-translate1.p.rapidapi.com/language/translate/v2&quot; payload = &quot;q=Hello%2C%20world!&amp;target=es&amp;source=en&quot; headers = { &quot;content-type&quot;: &quot;application/x-www-form-urlencoded&quot;, &quot;Accept-Encoding&quot;: &quot;application/gzip&quot;, &quot;X-RapidAPI-Key&quot;: &quot;6a13c0a609mshb8a55b62f42e6d0p15ec9ejsnaf557400ec31&quot;, &quot;X-RapidAPI-Host&quot;: &quot;google-translate1.p.rapidapi.com&quot; } response = requests.request(&quot;POST&quot;, url, data=payload, headers=headers) print(response.text) . {&#34;data&#34;:{&#34;translations&#34;:[{&#34;translatedText&#34;:&#34;¡Hola Mundo!&#34;}]}} . import requests URL = &quot;https://rapidapi.p.rapidapi.com/api/Search/WebSearchAPI&quot; HEADERS = { &#39;x-rapidapi-host&#39;: &quot;contextualwebsearch-websearch-v1.p.rapidapi.com&quot;, &#39;x-rapidapi-key&#39;: &quot;6a13c0a609mshb8a55b62f42e6d0p15ec9ejsnaf557400ec31&quot; } query = &quot;computer science&quot; page_number = 1 page_size = 10 auto_correct = True safe_search = False querystring = {&quot;q&quot;: query, &quot;pageNumber&quot;: page_number, &quot;pageSize&quot;: page_size, &quot;autoCorrect&quot;: auto_correct, &quot;safeSearch&quot;: safe_search} response = requests.get(URL, headers=HEADERS, params=querystring).json() total_count = response[&quot;totalCount&quot;] for web_page in response[&quot;value&quot;]: url = web_page[&quot;url&quot;] title = web_page[&quot;title&quot;] description = web_page[&quot;description&quot;] body = web_page[&quot;body&quot;] date_published = web_page[&quot;datePublished&quot;] language = web_page[&quot;language&quot;] is_safe = web_page[&quot;isSafe&quot;] provider = web_page[&quot;provider&quot;][&quot;name&quot;] print(&quot;Url: {}. Title: {}.&quot;.format(url, title)) . Url: https://en.wikipedia.org/wiki/Computer_science. Title: Computer science - Wikipedia. Url: https://elemental.medium.com/tagged/computers. Title: Computers Elemental. Url: https://stackoverflow.com/tags/computer-science/info. Title: &#39;computer-science&#39; tag wiki - Stack Overflow. Url: https://lbre.stanford.edu/event-services/equipment-services/computers. Title: Computers | Land, Buildings &amp; Real Estate. Url: http://explore.appinventor.mit.edu/news/computer-science. Title: Computer Science Education Week: Going Beyond Code | Explore MIT App Inventor. Url: https://www.birds.cornell.edu/home/information-science/. Title: Information Science | Birds, Cornell Lab of Ornithology : Birds, Cornell Lab of Ornithology. Url: https://www.cmu.edu/admission/majors-programs/school-of-computer-science/computer-science. Title: Computer Science - Undergraduate Admission - Carnegie Mellon University. Url: http://guide.berkeley.edu/undergraduate/degree-programs/computer-science/. Title: Computer Science &lt; University of California, Berkeley. Url: http://www.uniq.ox.ac.uk/computer-science. Title: Computer Science - UNIQ. Url: https://beaver.psu.edu/directory/computer-science. Title: Computer Science Directory | Penn State Beaver. . &lt;py-script&gt; import requests URL = &quot;https://rapidapi.p.rapidapi.com/api/Search/WebSearchAPI&quot; HEADERS = { &#39;x-rapidapi-host&#39;: &quot;contextualwebsearch-websearch-v1.p.rapidapi.com&quot;, &#39;x-rapidapi-key&#39;: &quot;6a13c0a609mshb8a55b62f42e6d0p15ec9ejsnaf557400ec31&quot; } query = &quot;computer science&quot; page_number = 1 page_size = 10 auto_correct = True safe_search = False querystring = {&quot;q&quot;: query, &quot;pageNumber&quot;: page_number, &quot;pageSize&quot;: page_size, &quot;autoCorrect&quot;: auto_correct, &quot;safeSearch&quot;: safe_search} response = requests.get(URL, headers=HEADERS, params=querystring).json() total_count = response[&quot;totalCount&quot;] for web_page in response[&quot;value&quot;]: url = web_page[&quot;url&quot;] title = web_page[&quot;title&quot;] description = web_page[&quot;description&quot;] body = web_page[&quot;body&quot;] date_published = web_page[&quot;datePublished&quot;] language = web_page[&quot;language&quot;] is_safe = web_page[&quot;isSafe&quot;] provider = web_page[&quot;provider&quot;][&quot;name&quot;] print(&quot;Url: {}. Title: {}.&quot;.format(url, title)) &lt;/py-script&gt; &lt;div id=&quot;request_output&quot;&gt;&lt;/div&gt; &lt;py-script&gt; from pyodide.http import pyfetch import asyncio URL = &quot;https://rapidapi.p.rapidapi.com/api/Search/WebSearchAPI&quot; HEADERS = { &#39;x-rapidapi-host&#39;: &quot;contextualwebsearch-websearch-v1.p.rapidapi.com&quot;, &#39;x-rapidapi-key&#39;: &quot;6a13c0a609mshb8a55b62f42e6d0p15ec9ejsnaf557400ec31&quot; } query = &quot;computer science&quot; page_number = 1 page_size = 10 auto_correct = True safe_search = False querystring = {&quot;q&quot;: query, &quot;pageNumber&quot;: page_number, &quot;pageSize&quot;: page_size, &quot;autoCorrect&quot;: auto_correct, &quot;safeSearch&quot;: safe_search} response = await pyfetch(url=URL, headers=HEADERS, params=querystring, method=&quot;GET&quot;) output = f&quot;GET request=&gt; status:{response.status}, json:{await response.json()}&quot; pyscript.write(&#39;request_output&#39;, output) &lt;/py-script&gt; &lt;py-script&gt; from pyodide.http import pyfetch import asyncio url = &quot;https://real-time-web-search.p.rapidapi.com/search&quot; beanbag = {&quot;q&quot;:&quot;create an online store&quot;,&quot;limit&quot;:&quot;10&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;6a13c0a609mshb8a55b62f42e6d0p15ec9ejsnaf557400ec31&quot;, &quot;X-RapidAPI-Host&quot;: &quot;real-time-web-search.p.rapidapi.com&quot; } response = await pyfetch(url=&quot;https://real-time-web-search.p.rapidapi.com/search&quot;, headers=HEADERS, params=beanbag, method=&quot;GET&quot;) output = f&quot;GET request=&gt; status:{response.status}, json:{await response.json()}&quot; pyscript.write(&#39;request_output&#39;, output) &lt;/py-script&gt; . &lt;py-script&gt; from pyodide.http import pyfetch import asyncio response = await pyfetch(url=&quot;https://www.boredapi.com/api/activity/&quot;, method=&quot;GET&quot;) output = f&quot;GET request=&gt; status:{response.status}, json:{await response.json()}&quot; pyscript.write(&#39;request_output&#39;, output) &lt;/py-script&gt; .",
            "url": "https://jyustin.github.io/test-fastpages/js%20codes/2022/12/13/api.html",
            "relUrl": "/js%20codes/2022/12/13/api.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "3.16 hacks and notes",
            "content": "notes . Simulation: this is a way to simulate a real world enviroment. consider random, biases, and if a simulation is worth it before developing one. . HINT: Simulations are useful because they are safe, inexpensive, repeatable, and accurately model how something would be in the real world. . HINT: when making a simulation you should consider: Removing details, which could be done using pseudo-random number generators,Using other ideas from previous college board lessons; like procedure, flowcharts and conditionals . hacks . Question Answer . Name(First+Last) | Justin Nguyen | . 1 | none | . 2 | none | . 3 | A ; B and C are true | . 4 | B ; other aircraft are most important for this type of simulation. weather + aircraft imperfections are least important. | . 5 | C ; both experiments and simulations need to consider what their purpose is | . 6 | A ; simulating a car crash would cost less and you can&#39;t calculate how a car crash would work irl | . 7 | A ; an experiment on greenhouse gases would be dangerous to the enviorment. also would be hard to control. | . 8 | none | . 9 | B ; we are not simulating anything. we are just doing a simple calculation. | . extra . import random rolls = 4 # alter to determine amount of dice rolls total = 0 i = 0 while rolls != 0: # rolls dice for number of rolls diceroll = random.randint(1,6) # the dice roll. change the &quot;6&quot; to how many sides on the dice you want i = i + 1 print(&quot;roll&quot;, i, &quot;is a &quot;, diceroll, &quot;!&quot;) total = total + diceroll rolls = rolls - 1 print(&quot;total of dice rolls:&quot;, total) . roll 1 is a 1 ! roll 2 is a 5 ! roll 3 is a 4 ! roll 4 is a 1 ! total of dice rolls: 11 . This is a dice roll simulation that simulates a 6 sided dice roll. you can determine how many die you want to roll and also see the sum of all die rolled. to modify the amount of sides on the dice, you would just change the last number to whatever amount of sides you want on your dice. .",
            "url": "https://jyustin.github.io/test-fastpages/3.16/2022/12/13/16sims.html",
            "relUrl": "/3.16/2022/12/13/16sims.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "3.12 3.13 hacks and notes",
            "content": "notes . procedure: a named group of programming instructions that may have parameters and return values. . Parameters: input values of a procedure. . Modularity: the practice of breaking a complex program into smaller, independent parts or modules that can be used and reused in different parts of the program . HINT: procedures should be descriptive. also consider what parameters to set and what data is needed for the procedure . Note: There are two types of procedures, one that returns a value or some type of data and on that just executes a block of statements. also remember to keep procedures simple. . make sure to have multiple different functions in a procedure . Think of procedures like functions I guess? . hacks for 3.12 . Q 1: . a -- ? b -- ? c -- 9 PROCEDURE find a () { b &lt;-- 9 9 . a &lt;-- b c . Print (a) } What is a? . ANS: a would become 891 since the procedure puts b as 99 then sets a to be b*c which is 891 (i may be wrong) . Q 2: . cost ⟵ 173 tax - 10% PROCEDURE applytax (cost, cpercentDiscounted){ temp &lt;-- 100 + percentTaxed temp &lt;-- temp / 100 cost &lt;-- cost x temp Print(cost)} . What is the cost? . ANS: temp = 110/100 so cost = 173 * 1.1 = 190.3 so cost = 190.3 . 3.13 Homework/Hacks . Q 1: Create a procedure that is meant to replace the top running backs yards per game in one season if the current running back has more yards per game . Necessary Parameters: toprbyardspg(100), currentrbyards(1260), totalGames(12) . ANS below . toprbyardspg = 100 currentrbyards = 1260 totalGames = 12 procedure topyards(toprbyardspg, currentrbyards, totalGames) { currentrbyards = 1260 / totalGames if toprbyardspg &lt; currentrbyards: currentrbyards = toprbyardspg } . 2. Write a procedure that will allow the A+ to get to the 1, while avoiding the black boxes. . Use what you learned about moving robots . PROCEDURE toEnd() { move_forward() rotate_left() move_forward() move_forward() rotate_right() move_forward() move_forward() move_forward() rotate_left() move_forward() move_forward() rotate_left() move_forward() move_forward() rotate_right() move_forward() rotate_left() move_forward() move_forward() # using loops and if statements may work but for me it would be harder and # take more time } . Q 3: . Which Is the Correct Way to define the Name of a Procedure? . A. PROCEDURE MYLIST . B. PROCEDURE MyList . C. procedure mylist . ANS: B because procedure is in caps and it&#39;s camel cased. . Q 4: . Write A Procedure That gets the BeachBall To the Green Square . PROCEDURE toEnd() { move_forward() rotate_left() move_forward() rotate_right() move_forward() move_forward() move_forward() move_forward() move_forward() rotate_left() move_forward() move_forward() } .",
            "url": "https://jyustin.github.io/test-fastpages/3.12/2022/12/13/.html",
            "relUrl": "/3.12/2022/12/13/.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "3.8 - 3.10 hacks and notes",
            "content": "notes . iteration is when something is repeated. usually done using loops. REPEAT N TIMES is pseudocode for this. . LISTS: collection of data in a sequence that can be iterated through. . EX: fruits = [&quot;apple&quot;, &quot;banana&quot;, &quot;kiwi&quot;, &quot;pomegranate&quot;] . LISTS ARE MUTABLE. you can add and remove items from a list. . Nested Lists: you can store lists inside lists for more complex data. can create sublists with this. . can iterate through sublists in list and then iterate through values in those sublists. . Exercise 1 . list = [1, 2, 3, 4, 5] # Print this list in reverse order #list.reverse() also works for i in range(len(list)): print(i + 1) a = list.pop() # pop element at the end of list list.insert(i, a) # add new element with index val of last popped element print(list) . 1 2 3 4 5 [5, 4, 3, 2, 1] . Exercise 2 . list = [9, 8, 4, 3, 5, 2, 6, 7, 1, 0] # Sort this array using bubble sort for i in list: for a in range(len(list) - 1): # for loops look at the first element and the element next to it if list[a] &gt; list[a + 1]: # if the 1st element is larger than the 2nd one + 1 list[a], list[a + 1] = list[a + 1], list[a] # position of 2 elements are swapped so larger element is in front # lesser element is in back # list.sort() also works :/ print(list) . [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] . Quiz reflection . 4) How can we add something to the end of a list? . (a) Use + sign . (b) The word Add . (c) Append . (d) Extend . ANS: Append . I picked extend and got the problem wrong because I mixed up the definition of extend with append. extend is for lists and append is for individual elements. . 8) What does a WHILE loop do? . (a) Iterates over an iterable and for a set amount of time . (b) Intuitively takes an iterable and manipulates it over a set period using pointers . (c) Loop over a bound interval by comparing to a conditional . (d) Crash bitcoin . ANS: (C) I got this one wrong because I picked A initially. I forgot that the set amount of time part must be added in. C is the technical definition. A is how WHile loops work. . 9) I want to iterate over a list until the user inputs &#39;quit&#39;. What loop would I use? . (a) WHILE loops . (b) FOR loops . (c) Recursive Loops . (d) Paradoxical Loops . ANS: B, but I picked A because I was thinking of a while loop and a for loop. I understand why a for loop would be used. .",
            "url": "https://jyustin.github.io/test-fastpages/3.8/2022/12/13/.810.html",
            "relUrl": "/3.8/2022/12/13/.810.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "3.5 - 3.7 hacks and notes",
            "content": "3.5 notes . Logical operators evaluate boolean values. Pseudocode will use Not , AND, and OR to demonstrate this. . practice questions 3.5 . q 1. What boolean value would result be? . a &lt;-- 19 b &lt;-- 28 result &lt;-- a = b . True . False . ANS: False b/c a /= b . q 2. What boolean value would result be? . score &lt;-- 99 average &lt;-- 99 result &lt;-- score ≤ average . True . False . ANS: True b/c score = average . q 3. What boolean value would be displayed? . type &lt;-- &quot;dog&quot; training &lt;-- &quot;yes&quot; DISPLAY((NOT (type = &quot;dog&quot;)) AND (training = &quot;no&quot;)) . True . False . ANS: FALSE AND FALSE b/c both statements are false . 3.6 notes . conditional statements are when the code acts based on different conditions based on user input or stored data. . ex: if statements and if else statements are conditional statements . HINT: flowcharts can help visualize conditional statements . practice questions 3.5 . q 1. What value will be displayed . rank &lt;-- &quot;titan&quot; hall &lt;-- 14 IF (rank = &quot;titan&quot;) { DISPLAY(&quot;You like Clash of Clans a lot.&quot;) } . You like Clash of Clans a lot. . 14 . titan . rank . ANS: Since rank = &quot;titan&quot;, the if statement is executed, displaying the code in it. () . q 2. What portion of the code will run? . class &lt;-- 33 cookies &lt;-- 25 IF (class &lt; cookies) { DISPLAY(&quot;Give out cookies today.&quot;) } ELSE { DISPLAY(&quot;Do not give out cookies today.&quot;) } . The if portion . The else portion . ANS: else portion b/c class &lt; cookies . 3.7 notes . NESTED CONDITIONAL: conditional statement in a conditional statement . HINT: flowcharts will be helpful to visualize these . 3.7 practice questions . q 1. Is this an example of a nested conditional? . space &lt;-- 90 download &lt;-- 20 IF (space &gt; download) { DISPLAY(&quot;File can be downloaded.&quot;) } . Yes . No . ANS: no b/c theres only one conditional statement . q 2. What does this code display? . price &lt;-- 200 discount &lt;-- 65 IF (price &gt; 100) { IF (discount &gt; 50) { DISPLAY(&quot;You can buy this item.&quot;) } ELSE { DISPLAY(&quot;You cannot purchase this item.&quot;) } } . You cannot purchase this item. . 50 . You can buy this item. . 65 . ANS: You cannot purchase this item b/c discount &lt; 50 . 3.5 HACKSSSS . Binary Practice Using psuedocode operators determine if the statements are true or false. The number type will be indicated in parentheses. . 1 90(D) = 1000(B) . A. True . B. False . ANS: B . 2 10(D) ≠ 0110(B) . A. True . B. False . ANS: B . 3 56(D) ≥ 111000(B) . A. True . B. False . ANS: A . 4 99(D) &lt; 1110011(B) . A. True . B. False . ANS: B . binary truth tables . AND OPERATOR . Value 1 Value 2 Result . 1 | 1 | 1 | . 1 | 0 | 0 | . 0 | 1 | 0 | . 0 | 0 | 0 | . OR Operator . Value 1 Value 2 Result . 1 | 1 | 1 | . 1 | 0 | 1 | . 0 | 1 | 1 | . 0 | 0 | 0 | . Not operator . Not Value Result . Not | 1 | 0 | . Not | 0 | 1 | . Python Practice . print(20 &lt; 20) # How can you change the operator to print a value of False? x = 30 y = 20 z = 10 print(x == y + z) # How can this return true by only manipulating the operator? # Manipulate the variables x, y, and z to make the below statement return true x = 20 z = 20 print(x == z) . False True True . 3.6 hacks . AP PREP . q 1. What is displayed by this code? . result &lt;-- 75 IF result &lt; 80 { DISPLAY(&quot;Please schedule a retake.&quot;) } ELSE { DISPLAY(&quot;Nice job!&quot;) } . Nice job! . Display . Please schedule a retake. . 75 . ANS: Please schedule a retake. . q 2. How is an if statement different from an if-else statement. . Extra words. . An if statement will only go through a process if a condition is met. An if-else statement will go through code no matter the conditions. . They are the exact same. . An if statement will go through the entire code segment every single time and the if-else statement is always used in an algorithm, no matter the conditions. . ANS: An if statement will only go through a process if a condition is met. An if-else statement will go through code no matter the conditions. (2) b/c if - else has to go through code because it will do something even if the condition is not what the if statement wants . q 3. What would be most appropriate for this situation? Ben wants to check his bank account. If his car fuel is full, he will go to the bank. Otherwise, he will go home. If he goes to the bank, he will withdraw money only if his balance is above $1000. . If statement . If-else statement . ANS: IF-else statement . q 4. What would be most appropriate for this situation? Luke wants to play basketball. If it is sunny outside he will go to the park to play basketball. . If statement . If-else statement . ANS: If statement cause we don&#39;t know what he&#39;ll do if it isn&#39;t sunny . Using Python . animals = [&quot;lion&quot;, &quot;tiger&quot;, &quot;wildebeest&quot;, &quot;shark&quot;, &quot;jellyfish&quot;, &quot;blobfish&quot;, &quot;raven&quot;] for i in animals: if i == &quot;shark&quot;: # What boolean value does this statement cause? # it should be true when the for loop gets to shark print(&quot;Fun Fact: The smallest shark is the dwarf lantern shark, and it is small enough to hold in your hand!&quot;) if i == &quot;wildebeest&quot; or i == &quot;lion&quot;: print(i,&quot;,this animal lives in the desert&quot;) else: print(i) # Practice # Using only one more if statement, alter the code to print out a statement saying if an animal lives in the desert, based on booleans . lion ,this animal lives in the desert tiger wildebeest ,this animal lives in the desert Fun Fact: The smallest shark is the dwarf lantern shark, and it is small enough to hold in your hand! shark jellyfish blobfish raven . 3.7 HACKS . Exercise 1 Create dictionaries for multiple food items, with the listed specifications Chicken Alfredo, Meat: Chicken, Time to Prepare: 60 minutes Cheese Quesadilla, Meat: None, Time to Prepare: 10 minutes Beef Wellington, Meat: Beef, Time to Prepare: 150 minutes Used nested conditionals, determine which meal you can cook, given that a) you have no meat at home, and b) you only have 30 minutes to make the meal . BefWil = { &quot;foody&quot;:&quot;Beef wellington&quot;, &quot;meat&quot;: &quot;beef&quot;, &quot;preptime&quot;: &quot;150 minutes&quot; } ChickenAlfredo = { &quot;foody&quot;:&quot;ChickenAlfredo&quot;, &quot;meat&quot;: &quot;Chicken&quot;, &quot;preptime&quot;: &quot;60 minutes&quot; } Ques = { &quot;foody&quot;:&quot;cheese quesadilla&quot;, &quot;meat&quot;: &quot;None&quot;, &quot;preptime&quot;: &quot;10 minutes&quot; } #function to see if meal meets requirements def dinner(food): if food[&quot;meat&quot;] == &quot;None&quot;: if food[&quot;preptime&quot;] &lt;= &quot;30&quot;: print(food[&quot;foody&quot;]) dinner(ChickenAlfredo) dinner(Ques) dinner(BefWil) . cheese quesadilla . FlowCHART .",
            "url": "https://jyustin.github.io/test-fastpages/3.5-3.7/2022/12/13/.5-3.7.html",
            "relUrl": "/3.5-3.7/2022/12/13/.5-3.7.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "3.3 - 3.4 hacks and notes",
            "content": "notes . An algorithm is a finite set of instructions that accomplish a specific task, us as humans, do algorithms on a daily basis. . Sequencing is doing steps in order, for example, doing the first step then the second then the third, etc. . Selection is when the programmer decides between two different outcomes. . Iteration is when you have to repeat a step until that condition is fulfilled. . hacks . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) #comments for top code # the code itself is sequencing (doing all orders in a specific order) # the if statement is selection as it only runs if the if statement is met and sorts through numbers # the for statement is iteration because it repeats the steps in it for i in numbers i = 1 starString = &quot;*&quot; while i &lt;= 5: j = 1 while j &lt;= i: print (&quot;*&quot;, end= &quot;&quot;) j += 1 print () i += 1 #comments for bottom code #the code itself is sequencing (doing all orders in a specific order) #while j = 1 is selection because it is changing j # while i loop is iteration because it repeats for if i is less than 5 # QUESTION 5 # code segment 1 numdog = 1 numcat = 0 numfish = 2 numparrot = 1 numbird = 1 numdog = numcat numcat = numfish numfish = numdog print(numfish) #this would print 0 #code segment 2 nummap = 1 numbooks = 2 numdrinks = 1 money = 770 numpens = 4 numpens = numbooks money = money - numpens print(money) #assuming all are integers, money is 768 . questions . Practice Problems given the following code segment below: a ⟵ 7 . b ⟵ 1 . c ⟵ 3 . d ⟵ 4 . a ⟵ b . b ⟵ c + d . d ⟵ b . find the value for a, b, c, d ANS: a = 1, b = 7, c = 3, d = 7 . consider the following code segment: hot ⟵ true . cold ⟵ false . cold ⟵ hot . hot ⟵ cold . what are the values of hot and cold after executing the code segment? . the value of hot is true, the value of cold is true the value of hot is false, the value of cold is true the value of hot is true, the value of cold is false the value of hot is false, the value of cold is false ANS: the value of hot is true, the value of cold is true . Sequencing (code below) num1 = 3 num2 = 1 num3 = 5 num1 = num2 + num3 num2 = num1 + num3 . What is the value of num1 and num2? ANS: num1 = 6, num2 = 11 . String Homework What does the code print? . Test 1 CODE BELOW firstName &lt;- &quot;Bob&quot; lastName &lt;- &quot;Smith&quot; var &lt;- substring(firstName, 1, 1) name &lt;- concat(lastName, var) email &lt;- concat(name, &quot;@gmail.com&quot;) DISPLAY(email) . What would the result be? ANS: &quot;SmithB@gmail.com&quot; . TEST 2 CODE BELOW word1 &lt;- &quot;computer&quot; word2 &lt;- &quot;textbooks&quot; length1 &lt;- len(word1)/2 length2 &lt;- len(word2)/3 first &lt;- substring(word1, 2, len1) second &lt;- substring(word2, len2+3, len2) newWord &lt;- concat(first, second) DISPLAY(newWord) . ANS: ompuook . after doing all of the questions, I found that the biggest area of weakness for me was vocabulary and making sure I understand exactly what each vocab term means. I just need to be more familiar with these kinds of terms. .",
            "url": "https://jyustin.github.io/test-fastpages/3.3/2022/12/13/.1.html",
            "relUrl": "/3.3/2022/12/13/.1.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "3.14 3.15 hacks and notes",
            "content": "notes . libraries contain prewritten code/procedures that you can use for coding. . HINT: libraries can simplify complex problems and using them can make a problem easier to solve . APIs (application program interfaces) specify how procedures in libraries should behave and be utilized. . Documentation is an explanation of the code . HINT: look at Documentation for code if you don&#39;t understand something . The APCSP EXAM REFRENCE SHEET could come in handy later. it is essentially a library provided by College Board. . you may need expressions for generating random values. . EX: random number generator, dice roll, etc. . RANDOM(a, b) generates and returns a random integer from a to b, inclusive. Each result is equally likely to occur. . randint(start, stop) generates random integer between start and stop. . randrange(start, stop, step) generates random number where start is min value, stop is max value, and step is the multiples the rng generates. . If start = 0 and step = 5 all the values that can by outputed are 0 and multiples of 5 . HACKS . reflection . libraries and APIs are essentially prewritten code that can help you on complex problems. also use documentation to understand code segments and libraries/APIS. lastly, understand that random expressions and the use of random algorithms will be tested on the AP EXAM. . multiple choice . Q 1: What does the random(a,b) function generate? . A. A random integer from a to be exclusive . B. A random integer from a to b inclusive. . C. A random word from variable a to variable b exclusive. . D. A random word from variable a to variable b inclusive. . ANS: B. this is the definition given earlier and makes most sense . Q 2: What is x, y, and z in random.randrange(x, y, z)? . A. x = start, y = stop, z = step . B. x = start, y = step, z = stop . C. x = stop, y = start, z = step . D. x = step, y = start, z = stop . ANS: A, because x and y determine min and max values, and z is supposed to determine the steps the random values take . Q 3: Which of the following is NOT part of the random library? . A. random.item . B. random.random . C. random.shuffle . D. random.randint . ANS: A because random.item sounds like it is just random.choice, which does exists. it is logical to believe that random.item can&#39;t exist because a similar existing random function already exists that could probably do what that intended to do. . Q 4: Write a thorough documentation of the following code: . import random # import random library names_string = input(&quot;Give me everybody&#39;s names, seperated by a comma.&quot;) # takes user input names = names_string.split(&quot;,&quot;) # splits names_string into list. each item in list is name separated by commas num_items = len(names) # number of names random_choice = random.randint(0, num_items - 1) # picks random name, uses num_items to pick random item from the list person_who_will_pay = names[random_choice] # determine person who is paying print(f&quot;{person_who_will_pay} is going to buy the meal today!&quot;) # prints who will pay . blue is going to buy the meal today! . (4) Coding Challenges! . REQUIRED: Create programs in python to complete the two task . 1: Create a program to pick five random names from a list of at least 15 names . import random names = [&quot;red&quot;, &quot;joe&quot;, &quot;joeseph&quot;, &quot;john&quot;, &quot;jamie&quot;, &quot;jack&quot;, &quot;joselyn&quot;, &quot;justin&quot;, &quot;blue&quot;, &quot;eric&quot;, &quot;zack&quot;, &quot;harry&quot;, &quot;lamb&quot;, &quot;four&quot;, &quot;five&quot;] # above is ls of names i = 0 while i != 5: # repeat 5 times rand_names = random.choice(names) # picks random name i = i + 1 # needed for while loop print(rand_names) # prints random name . blue four five jack eric . 2: Create a program to simulate a dice game where each player rolls two fair dice (6 sides); the player with the greater sum wins . import random player1 = 0 # initial player&#39;s score player2 = 0 i = 0 while i != 2: # while loop rolls the &quot;dice&quot; x = random.randint(1, 6) y = random.randint(1, 6) # both of these are the die rolls player1 = player1 + x # adds die roll to the player score player2 = player2 + y i = i + 1 # repeat 2 times print(&quot;player 1 score: &quot;, player1) #these 2 print out scores print(&quot;player 2 score: &quot;, player2) if player1 &gt; player2: # determine who won print(&quot;player 1 wins!&quot;) else: print(&quot;player 2 wins!&quot;) . player 1 score: 4 player 2 score: 12 player 2 wins! .",
            "url": "https://jyustin.github.io/test-fastpages/3.14/2022/12/12/3.14.15.html",
            "relUrl": "/3.14/2022/12/12/3.14.15.html",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "week 2 status",
            "content": "this week (week 2) . since I was absent most of the time I can’t say much about this week but looking at the lessons and doing them did give me a refresher on these topics. but I still struggle with binary and going between decimal and binary. I think that a calculator would be necessary for this operation. .",
            "url": "https://jyustin.github.io/test-fastpages/frontend/binary",
            "relUrl": "/frontend/binary",
            "date": " • Dec 2, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "3.5 - 3.7 hacks and notes",
            "content": "",
            "url": "https://jyustin.github.io/test-fastpages/3.5-3.7/2022/12/01/.5-3.7.html",
            "relUrl": "/3.5-3.7/2022/12/01/.5-3.7.html",
            "date": " • Dec 1, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "1.1 - 1.2 hacks and notes",
            "content": "Notes . variables and lists . these are an abstraction inside a program that hold a value. each variable has associated data storage that represents one value at a time, but that value can be a list or other collection that in turn contains multiple values. . use good names when naming variables to make the code easy to read . lists allow variables to be bundled together. . you can add or remove variables from one list to another with .append . assignment operator . this changes a variable to a certain value. on tests, &quot;⟵&quot; will be used for assignment. storing values is assigning them to variables . Key Vocab . list: a sequence of several variables grouped together . variable: a way of storing information in a computer program, which could later be changed, referenced, and used . data types: a set of values and operations on those values . abstract data types: a data type whose internal representation is hidden from the client . client: a program that uses a data type . objects: a structure that can take on a data-type value . Applications programming interface (API): which is a list of constructors and instance methods or operations, used to specify the behavior of an abstract data type . Hacks 1.1-1.2 . 3 practice questions . q: which variable would you use for value of a stock? . A: stock1 string . B: stock string . C: is_stock boolean . D: stock1val integer . Ans: D . q which variable would you use for a class names? . 1: John string . 2: isJohn boolean . 3: john integer . Ans: 1 . q what variable name would you use to store whether tv is on or off? . A: ison . B: on . C: off . D: yes . Ans: A, also store as boolean . example practice problems . Consider the following code segment: . num1 ⟵ 6 . num2 ⟵ 4 . num3 ⟵ 10 . IF num1 &lt; num2 . num1 ⟵ num2 . ELSE . num3 ⟵ num2 . IF num2 ≥ num3 . num1 ⟵ num2 + num3 . sum ⟵ num1 + num2 + num3 . What is the value of sum after the code segment is executed? . 18 . 14 . 16 . 12 . ANS: 16 . Consider the following code segment . num1 ⟵ 5 . num2 ⟵ 10 . num3 ⟵ 20 . num3 ⟵ num1 . num3 ⟵ num2 . num1 ⟵ num3 . sum ⟵ num1 + num2 + num3 . what is sum? . 35 . 30 . 45 . 25 . ANS: 45 . hacks . Consider the following code segment: . num1 ⟵ 4 . num2 ⟵ 6 . num1 ⟵ num 2 . DISPLAY(num1) . DISPLAY(num2) . What is displayed after running this code segment? . 4 6 . 6 4 . 4 4 . 6 6 . ANS: 6 6 . I got this one wrong because I initially thought that num1 would retain its value. I realize now that num1 was changed to num2, and that I just kind of read over that statement. . What is the difference between an integer and string of numbers? . An integer is just a set data type while a string of numbers can be changed with addition and subtraction . An integer can be letters and numbers while a string is just numbers . An integer is just numbers while a string is just words . An integer can be changed with addition and subtraction and a string is a set number or string of letters. . ANS: 4th statement I got this problem wrong because my knowledge of that vocab was weak. I initially thought it was 3rd statement, but now I know the specific definition of an integer and Strings. . INT are numbers that can undergo math statements . Strings are words that can&#39;t have their problems changed by math (addition subtraction) . Extra Binary Hacks if you changed your bits to 24 . Convert the following decimal notation to binary notation: . 57345 . ANS: 1110000000000001 . I got this one wrong because i messed up somewhere in my math . 16777215 . ANS: 111111111111111111111111 . I got this one wrong for same reason as the previous problem . Convert the binary notation to decimal notation: . 1101001000101000 . 53800 . I also got this one wrong because of math errors. I should double check my problems on the test to ensure that I get them right. . I did all of the problems on the blog. I found that converting to decimal was a lot harder than conversions from binary to decimal. . after doing the other problems I found that most topics are easy to understand but binary and assigning variables different values is kind of difficult. the binary is difficult because I sometimes just make math errors, and the other just requires some harder thinking to avoid making some simple error. .",
            "url": "https://jyustin.github.io/test-fastpages/3.1/2022/11/30/11stuff.html",
            "relUrl": "/3.1/2022/11/30/11stuff.html",
            "date": " • Nov 30, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Binary Math",
            "content": "Binary Math with Conversions . Plus Binary Octal Hexadecimal Decimal Minus decimal with base 4 all on? . +1 | 00000000 | 0 | 0 | 0 | -1 | | | . Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | . | | | | | | | | . | . | | | | | | | | add 1 to decimal | &lt;/tr&gt; | | | | | | | | . .",
            "url": "https://jyustin.github.io/test-fastpages/frontend/binary",
            "relUrl": "/frontend/binary",
            "date": " • Nov 17, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "final tri 1 review",
            "content": "score of final . . problem review . Problem 1 . . I got this problem wrong because I simply did not know how to work with binary numbers. . How to convert binary to numbers . binary works in that each number has a decimal value, and that number will add onto the full value. for example. to find the value of 1011, you would convert 1 to 2^3, 0 to 0, 1 to 2^1, and the last 1 to 2^0. the power the 2s goes to is determined by the place it is in the binary. . 1 0 1 1 . 1 would be 4ths place . 0 would be 3rd place if 1 was there . 1 would be 2nd place . and last 1 would be 0 place . then we add all of the values together, which would add up to 8 + 2 + 1 which is 11. . I only got this problem wrong because I had no idea how binary numbers worked, but now, I am sure that I will get problems like this right next time. . problem 2 . . My problem here was that i mistakenly gave p its original value the fifth statement, p &lt;— q makes p equal q, which is 20. . last statement setting r equal to p should have been 20 because p had been initialized to 20 earlier, but I must have glossed over the 5th statement and read through the code too quickly, because I thought that p was still it’s original value, 10. Next time, I need to make sure that I completely read through pseudo code problems like this many times over to confirm that I understand the entirety of the problem. . problem 3 . . my error here was that I was thinking about this too hard and trying to work out what happens at each runthrough of the loop. I should have looked at things from a math perspective and realized what the loop was essentially doing, not what is happening at each playthrough of the loop. . basically, this problem is adding x to itself 5 times. so the first time, x is 1, which then adds 2 to that 1, and so on until x is 5. My mistake was that I was thinking too hard about it, and stopped at the 4th runthrough of the loop. I forgot to add that last five. I think that I will need to work on understanding for loops more and math functions in general so that I don’t slip up like this again . reflection . I feel like I am doing pretty good in my knowledge of pseudo code and networking, as I did well on those problems. the hard ones that gave me a challenge were the ones that I did not understand, like the binary problems. I think that to do better on the next test, I need to think critically and slowly read through the problem to ensure I know exactly how the problem will be run through. But for now, I think i am doing pretty well. .",
            "url": "https://jyustin.github.io/test-fastpages/final%20week/2022/11/07/final.html",
            "relUrl": "/final%20week/2022/11/07/final.html",
            "date": " • Nov 7, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "Night at the Museum reflection",
            "content": "looking at other’s projects . Our team spent a lot of time at N@TM trying to scrap together an API to present, so we didn’t have much time to view other’s projects. I did get a chance to see one teams project though. They were a clock website that would give the user time from certain times zones, as well as a alarm system. I was pretty impressed by their work. They explained to me that their project was a javascript file that drew from a different file with all the information about the timezones. their frontend and backend were well defined, unlike our project, which did not really have defined frontend/backend. . I also looked at another project with information about stocks. What impressed me the most was the fact that the project was very sleek and professional. Hopefully next time the project I work on will be nice and neat. It really made me feel like the project was something well designed. I also felt like the roles of their team were very well defined. I feel like with our team, the roles of our team were very flexible, but they were not well defined. I think better structure of the team would possibly help our team in the future. I guess what I take from this is that frontend development and a clean frontend are essential to creating the image of a stable, functioning program/product. . Reflection . Overall, I would say this has been a learning experience for me and our team. Our team learned that requirements and a plan should be developed and be completely known. We would have saved ourselves a lot of trouble if we had known that an API would be required beforehand. Additionally, I learned myself that ensuring that I completely understand everything is very important. I learned from watching other people that it pays to be well prepared. Our team was very unprepared for this event, and we were practically scrambling to get everything together. I think that next time we have some sort of deadline, the last 2 days should be testing and ensuring that the product functions, not trying to fit as much into our program as possible. .",
            "url": "https://jyustin.github.io/test-fastpages/final%20week/2022/11/06/Nightmuseum.html",
            "relUrl": "/final%20week/2022/11/06/Nightmuseum.html",
            "date": " • Nov 6, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "frontend api breakdown",
            "content": "&lt;!-- HTML table fragment for page --&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Time&lt;/th&gt; &lt;th&gt;All-time Cases&lt;/th&gt; &lt;th&gt;Recorded Deaths&lt;/th&gt; &lt;th&gt;Active Cases&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;td id=&quot;time&quot;&gt;&lt;/td&gt; &lt;td id=&quot;total_cases&quot;&gt;&lt;/td&gt; &lt;td id=&quot;total_deaths&quot;&gt;&lt;/td&gt; &lt;td id=&quot;active_cases&quot;&gt;&lt;/td&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Country&lt;/th&gt; &lt;th&gt;All-time Cases&lt;/th&gt; &lt;th&gt;Recorded Deaths&lt;/th&gt; &lt;th&gt;Active Cases&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody id=&quot;result&quot;&gt; &lt;!-- generated rows --&gt; &lt;/tbody&gt; &lt;/table&gt; . above code builds html table that will receive data. . &lt;!-- Script is layed out in a sequence (no function) and will execute when page is loaded --&gt; &lt;script&gt; // prepare HTML result container for new output const resultContainer = document.getElementById(&quot;result&quot;); // prepare fetch options const url = &quot;https://flask.nighthawkcodingsociety.com/api/covid/&quot;; const headers = { method: &#39;GET&#39;, // *GET, POST, PUT, DELETE, etc. mode: &#39;cors&#39;, // no-cors, *cors, same-origin cache: &#39;default&#39;, // *default, no-cache, reload, force-cache, only-if-cached credentials: &#39;omit&#39;, // include, *same-origin, omit headers: { &#39;Content-Type&#39;: &#39;application/json&#39; // &#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;, }, }; . Above code is how we will get the api . // fetch the API fetch(url, headers) // response is a RESTful &quot;promise&quot; on any successful fetch .then(response =&gt; { // check for response errors if (response.status !== 200) { const errorMsg = &#39;Database response error: &#39; + response.status; console.log(errorMsg); const tr = document.createElement(&quot;tr&quot;); const td = document.createElement(&quot;td&quot;); td.innerHTML = errorMsg; tr.appendChild(td); resultContainer.appendChild(tr); return; } // valid response will have json data response.json().then(data =&gt; { console.log(data); console.log(data.world_total) // World Data document.getElementById(&quot;time&quot;).innerHTML = data.world_total.statistic_taken_at; document.getElementById(&quot;total_cases&quot;).innerHTML = data.world_total.total_cases; document.getElementById(&quot;total_deaths&quot;).innerHTML = data.world_total.total_deaths; document.getElementById(&quot;active_cases&quot;).innerHTML = data.world_total.active_cases; // Country data for (const row of data.countries_stat) { console.log(row); // tr for each row const tr = document.createElement(&quot;tr&quot;); // td for each column const name = document.createElement(&quot;td&quot;); const cases = document.createElement(&quot;td&quot;); const deaths = document.createElement(&quot;td&quot;); const active = document.createElement(&quot;td&quot;); // data is specific to the API name.innerHTML = row.country_name; cases.innerHTML = row.cases; deaths.innerHTML = row.deaths; active.innerHTML = row.active_cases; // this builds td&#39;s into tr tr.appendChild(name); tr.appendChild(cases); tr.appendChild(deaths); tr.appendChild(active); // add HTML to container resultContainer.appendChild(tr); } }) }) . above code will first grab api and extract data from it, them append this data to cells in table. also has a catch for if there is a response error. will print &quot;database error&quot; if such occurs. . // catch fetch errors (ie ACCESS to server blocked) .catch(err =&gt; { console.error(err); const tr = document.createElement(&quot;tr&quot;); const td = document.createElement(&quot;td&quot;); td.innerHTML = err; tr.appendChild(td); resultContainer.appendChild(tr); }); &lt;/script&gt; . above code will fix errors if the api suddenly does not allow connection. .",
            "url": "https://jyustin.github.io/test-fastpages/python%20codes/week%208/2022/10/20/apifront.html",
            "relUrl": "/python%20codes/week%208/2022/10/20/apifront.html",
            "date": " • Oct 20, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "networking diagram",
            "content": ".",
            "url": "https://jyustin.github.io/test-fastpages/week%208/2022/10/11/network.html",
            "relUrl": "/week%208/2022/10/11/network.html",
            "date": " • Oct 11, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "Python RapidAPI",
            "content": "Python, RapidAPI Terms . APIs and tooling like Jupyter docs allows many opportunities in fields like Data Science. As more and more developers use APIs, they build standards in how you setup a client, send requests and receive information... . Covid19 RapidAPI Example . To begin the API journey. You need to find an API provider. . RapidAPI is a great option. You must setup and account, but there are many free options. | Goto this page for starters, the Corona virus World and India data- Under Code Snippets pick Python - Requests | . RapidAPI, you will select Python Requests type of code to work with you Notebook. . The url is the endpoint to which the API is directed | The headers is a dictionary data structure to send special messaging to the endpoint | The requests.request() python function is used to send a request and retrieve their responses | The response variable receives result of of the request in JSON text | . Next step, is to format the response according to your data science needs . &quot;&quot;&quot; Requests is a HTTP library for the Python programming language. The goal of the project is to make HTTP requests simpler and more human-friendly. &quot;&quot;&quot; import requests &quot;&quot;&quot; RapidAPI is the world&#39;s largest API Marketplace. Developers use Rapid API to discover and connect to thousands of APIs. &quot;&quot;&quot; url = &quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot; headers = { &quot;X-RapidAPI-Key&quot;: &quot;6a13c0a609mshb8a55b62f42e6d0p15ec9ejsnaf557400ec31&quot;, &#39;x-rapidapi-host&#39;: &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot; } # Request Covid Data response = requests.request(&quot;GET&quot;, url, headers=headers) print(response.json) # uncomment this line to see raw data # This code looks for &quot;world data&quot; print(&quot;World Totals&quot;) world = response.json().get(&#39;world_total&#39;) # turn response to json() so we can extract &quot;world_total&quot; for key, value in world.items(): # this finds key, value pairs in country print(key, value) print() # This code looks for USA in &quot;countries_stats&quot; print(&quot;Country Totals&quot;) countries = response.json().get(&#39;countries_stat&#39;) for country in countries: # countries is a list if country[&quot;country_name&quot;] == &quot;USA&quot;: # this filters for USA for key, value in country.items(): # this finds key, value pairs in country print(key, value) . &lt;bound method Response.json of &lt;Response [200]&gt;&gt; World Totals total_cases 509,268,964 new_cases 204,268 total_deaths 6,242,509 new_deaths 630 total_recovered 461,827,849 active_cases 41,198,606 serious_critical 42,510 total_cases_per_1m_population 65,334 deaths_per_1m_population 800.9 statistic_taken_at 2022-04-24 11:18:01 Country Totals country_name USA cases 82,649,779 deaths 1,018,316 region total_recovered 80,434,925 new_deaths 0 new_cases 0 serious_critical 1,465 active_cases 1,196,538 total_cases_per_1m_population 247,080 deaths_per_1m_population 3,044 total_tests 1,000,275,726 tests_per_1m_population 2,990,303 . Digital Coin Example . This example provides digital coin feedback (ie Bitcoin). It include popularity, price, symbols, etc. . A valid X-RapidAPI-Key is required. Look in code for link to RapidAPI page | Read all comments in code for further guidance | . # RapidAPI page https://rapidapi.com/Coinranking/api/coinranking1/ # Begin Rapid API Code import requests url = &quot;https://coinranking1.p.rapidapi.com/coins&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;desc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;jcmbea0fa2ff5msh7f14bf69be38ca6p175482jsn6c4988114560&quot;, # place your key here &quot;X-RapidAPI-Host&quot;: &quot;coinranking1.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) # End Rapid API Code json = response.json() # convert response to python json object # Observe data from an API. This is how data transports over the internet in a &quot;JSON&quot; text form # - The JSON &quot;text&quot; is formed in dictionary {} and list [] divisions # - To read the result, Data Scientist of Developer converts JSON into human readable form # - Review the first line, look for the keys -- &quot;status&quot; and &quot;data&quot; . {&#34;message&#34;:&#34;You are not subscribed to this API.&#34;} . Formatting Digital Coin example . JSON text transferred from the API in the previous cell was converted to a Python Dictionary called json. The &quot;coins&quot; in the dictionary contain a list of the most relevant data. Look at the code and comments to see how the original text is turned into something understandable. Additionally, there are error check to make sure we are starting the code with the expectation that the API was run correctly. . &quot;&quot;&quot; This cell is dependent on valid run of API above. - try and except code is making sure &quot;json&quot; was properly run above - inside second try is code that is used to process Coin API data Note. Run this cell repeatedly to format data without re-activating API &quot;&quot;&quot; try: print(&quot;JSON data is Python type: &quot; + str(type(json))) try: # Extracting Coins JSON status, if the API worked status = json.get(&#39;status&#39;) print(&quot;API status: &quot; + status) print() # Extracting Coins JSON data, data about the coins data = json.get(&#39;data&#39;) # Procedural abstraction of Print code for coins def print_coin(c): print(c[&quot;symbol&quot;], c[&quot;price&quot;]) print(&quot;Icon Url: &quot; + c[&quot;iconUrl&quot;]) print(&quot;Rank Url: &quot; + c[&quot;coinrankingUrl&quot;]) # Coins data was observed to be a list for coin in data[&#39;coins&#39;]: print_coin(coin) print() except: print(&quot;Did you insert a valid key in X-RapidAPI-Key of API cell above?&quot;) print(json) except: print(&quot;This cell is dependent on running API call in cell above!&quot;) . JSON data is Python type: &lt;class &#39;dict&#39;&gt; Did you insert a valid key in X-RapidAPI-Key of API cell above? {&#39;message&#39;: &#39;You are not subscribed to this API.&#39;} . Go deeper into APIs . Web Development vs Jupyter Notebook. A notebook is certainly a great place to start. But, for your end of Trimester project we want you to build the skill to reference and use APIs within your Project. Here are some resources to get you started with this journey. . In the Nighthawk Coders APCSP you can find an Overview and Examples using APIs:APCSP APIs menu- Using Covid RapidAPI JavaScript frontend API code in APCSP Fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-rapidapi.md | . | Making a Jokes API (this will next API tech talk) Frontend. JavaScript frontend code in APCSP fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-jokes.md | Backend Endpoints. Python code that allows Frontend access: https://github.com/nighthawkcoders/flask_portfolio/blob/main/api.py | Backend Jokes Management. Python code that support Create, Read, Update, Delete (CRUD): https://github.com/nighthawkcoders/flask_portfolio/blob/main/model_jokes.py | . | . Hacks . Find and use an API as part of your project. An API and a little coding logic will be a big step toward getting meaningful data for a project. There are many API providers, find one that might work for your project to complete this hack. When picking an API you are looking for something that will work with either JavaScript Fetch or Python Request. Here are some samples, these are not qualified in any way. . RapidAPI- GitHub Project | No Key APIs Article | Twitter Developer | Google Developer | Reddit Developer | . Show API and format results in either Web Page or Jupyter Notebook. Ultimately, I will expect that we do APIs in backend (Python/Flask). However, for this Hack you can pick your preference. We will discuss pros and cons in next API tech talk. .",
            "url": "https://jyustin.github.io/test-fastpages/techtalk/rapidapi",
            "relUrl": "/techtalk/rapidapi",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post26": {
            "title": "Big Idea 1 'Identifying and Correcting Errors'",
            "content": "College Board Big Idea 1 . Identifying and Correcting Errors (Unit 1.4) . Become familiar with types of errors and strategies to fixing them . Lightly Review Videos and take notes on topics with Blog | Complete assigned MCQ questions | . Here are some code segments you can practice fixing: . alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . The intended outcome is to determine where the letter is in the alphabet using a while loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i + 1) + &quot; letter in the alphabet&quot;) i += 1 . The letter a is the 1 letter in the alphabet . The intended outcome is to determine where the letter is in the alphabet using a for loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) for i in alphabetList: count = 1 if i == letter: count += alphabetList.index(letter) print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count) + &quot; letter in the alphabet&quot;) . The letter b is the 2 letter in the alphabet . This code outputs the even numbers from 0 - 10 using a while loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a while loop. . odds = [] i = 1 while i &lt;= 10: odds.append(i) i += 2 print(odds) . [1, 3, 5, 7, 9] . This code outputs the even numbers from 0 - 10 using a for loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a for loop. . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 2 == 1): odds.append(numbers[i]) print(odds) . [1, 3, 5, 7, 9] . The intended outcome is printing a number between 1 and 100 once, if it is a multiple of 2 or 5 . What values are outputted incorrectly. Why? | Make changes to get the intended outcome. | . numbers = [] newNumbers = [] i = 0 while i &lt; 100: numbers.append(i) i += 1 for i in numbers: if numbers[i] % 5 == 0: newNumbers.append(numbers[i]) elif numbers[i] % 2 == 0: newNumbers.append(numbers[i]) newNumbers.remove(0) print(newNumbers) . [2, 4, 5, 6, 8, 10, 12, 14, 15, 16, 18, 20, 22, 24, 25, 26, 28, 30, 32, 34, 35, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 55, 56, 58, 60, 62, 64, 65, 66, 68, 70, 72, 74, 75, 76, 78, 80, 82, 84, 85, 86, 88, 90, 92, 94, 95, 96, 98] . Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a “single” test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write “just enough” code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0 i = 1 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times while i == 1: item = input(&quot;Please select an item from the menu&quot;) total = menu[item] foo = input(&quot;are you sure you want, &quot; + item + &quot; (print y or n)&quot;) if foo == &quot;y&quot;: break elif foo == &quot;n&quot;: i == 1 #code should add the price of the menu items selected by the user print(total) . Menu burger $3.99 fries $1.99 drink $0.99 1.99 . Hacks . Now is a good time to think about Testing of your teams final project... . What errors may arise in your project? | What are some test cases that can be used? | Make sure to document any bugs you encounter and how you solved the problem. | What are “single” tests that you will perform on your project? Or, your part of the project? As Hack Design and Test plan action … Divide these “single” tests into Issues for Scrum Board prior to coding. FYI, related tests could be in same Issue by using markdown checkboxes to separate tests. | . | .",
            "url": "https://jyustin.github.io/test-fastpages/collegeboard/error",
            "relUrl": "/collegeboard/error",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post27": {
            "title": "js/html table",
            "content": "var msg = &quot;Hello, Worldo!&quot;; function logIt(output) { console.log(output); } function logItType(output) { console.log(typeof output, &quot;;&quot;, output); } // define a function to hold data for a Person function Person(name, ghID, classOf) { this.name = name; this.ghID = ghID; this.classOf = classOf; this.role = &quot;&quot;; } // define a setter for role in Person data Person.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, ghID: this.ghID, classOf: this.classOf, role: this.role}; const json = JSON.stringify(obj); return json; } // make a new Person and assign to variable teacher var teacher = new Person(&quot;Mr M&quot;, &quot;jm1021&quot;, 1977); // object type is easy to work with in JavaScript // output of Object and JSON/string associated with Teacher teacher.setRole(&quot;Teacher&quot;); // set the role var students = [ new Person(&quot;Justin&quot;, &quot;Jyustin&quot;, 2024), new Person(&quot;111&quot;, &quot;101&quot;, 1111), new Person(&quot;2222&quot;, &quot;220&quot;, 2222), ]; // define a classroom and build Classroom objects and json function Classroom(teacher, students){ // 1 teacher, many student // start Classroom with Teacher teacher.setRole(&quot;Teacher&quot;); this.teacher = teacher; this.classroom = [teacher]; // add each Student to Classroom this.students = students; this.students.forEach(student =&gt; { student.setRole(&quot;Student&quot;); this.classroom.push(student); }); // build json/string format of Classroom this.json = []; this.classroom.forEach(person =&gt; this.json.push(person.toJSON())); } // make a CompSci classroom from formerly defined teacher and students compsci = new Classroom(teacher, students); // define an HTML conversion &quot;method&quot; associated with Classroom Classroom.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid red;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em blue;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;u&gt;&quot; + &quot;Name&quot; + &quot;&lt;/u&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;u&gt;&quot; + &quot;GitHub ID&quot; + &quot;&lt;/u&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;u&gt;&quot; + &quot;Class Of&quot; + &quot;&lt;/u&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;u&gt;&quot; + &quot;Role&quot; + &quot;&lt;/u&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var row of compsci.classroom) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.ghID + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.classOf + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.role + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(compsci._toHtml()); . NameGitHub IDClass OfRole . Mr M | jm1021 | 1977 | Teacher | Justin | Jyustin | 2024 | Student | 111 | 101 | 1111 | Student | 2222 | 220 | 2222 | Student | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . .",
            "url": "https://jyustin.github.io/test-fastpages/js%20codes/2022/09/27/js.html",
            "relUrl": "/js%20codes/2022/09/27/js.html",
            "date": " • Sep 27, 2022"
        }
        
    
  
    
        ,"post28": {
            "title": "agile methodology",
            "content": ". Agile Methodology hacks . Scrum Team layout: . Scrum Master: The scrum master helps to facilitate the sprint by ensuring that an agile framework is followed. He/she is committed to tracking issues and maintaining scrum boards, but should also remain flexible and open to opportunities for the team to improve their workflow. . DevOps: DevOps is the combination of cultural philosophies, practices, and tools that increases an team’s ability to deliver applications and services at high velocity: version control, integration, managing dependencies (requirements.txt), AWS deployment are some of the key functions that impact velocity. . Development Team: The development team can be comprised of all kinds of people including designers, writers, presenters, developers, etc. Two key roles in Web Development are … . Frontend Developer: A front-end developer builds the front-end portion of websites and web applications—that is, the part that users actually see and interact with. . Backend Developer: Back-end developers a build and maintain the mechanisms that process data and perform actions like data storage, security, and other server-side functions that you cannot see. . Scrum Board: . The Scrum Board contains issues that are assigned to individuals, each of these issues will have tangible deliverable links (code/video/…). Scrum Team will use Scrum Board to understand everyone’s ideas and efforts . 7 important skills . Creativity. Do you think outside our inside the box? how do you work with planned system? . | Critical thinking. Use critical thinking to step back and solve problems. deal with problems before they arise. . | Communication. EFFECTIVE COMMUNICATION IS VITAL. Communication is not just you communicating but also you interpreting what others communicate to you. . | Collaboration through Leadership. Leaders are big-picture thinkers who take various interests into account when making major decisions. . | Collaboration through teamwork. accept responsibilities, have trust in teammates, manage time wisely. work with team. . | Researching. Use research in all things. Use it before tackling problem to plan ahead. stop any problems before they arise. . | technical. Leaders are big-picture thinkers who take various interests into account when making major decisions. . |",
            "url": "https://jyustin.github.io/test-fastpages/markdown/week%202/2022/09/24/scrub.html",
            "relUrl": "/markdown/week%202/2022/09/24/scrub.html",
            "date": " • Sep 24, 2022"
        }
        
    
  
    
        ,"post29": {
            "title": "notes for focus and habits hacks",
            "content": "using positive psychology to improve life . give time for healthy habits -mindful moment -meditation . insights . 1: “this enterprise is possible” you can control your happiness. You control how happy you are. . although genes control 50% happiness other 50% s happiness you control . it is your own behaviors that make you happy . 2: you can become happy, but it takes work . if you build good, healthy habits into your routine, you will become happy. need to do it every day. . 3: recognize that your mind is not always telling you what makes you happy . ex: people think that salary makes one happy but in truth wealthy people are not all very happy. . minds lie to you about what you can do to be happier. . 4: establish social connections. being with others makes . ex: spending money on others makes you happy and the receivers happy. . 5: make time for gratitude every day. . when you talk to others, talk about gratitude . express gratitude to those who have helped you . focus on blessings, not hassle . 6: exercise is extremely good for your mental health. . 7: get enough sleep . 8: take time to be in the present moment. . 9: become wealthy in terms of time. . value your time more than becoming more rich. use your time to become healthy . gratitude list . 1: My family, who have always been there for me . 2: my country. I am grateful for the freedom I have here . 3: I am grateful to be in a nice neighborhood and have friendly neighbors to see every day . 4: My friends, who support me and help me through hard times . future goals . 1: improve at programming so that I can contribute to open source projects I like . 2: Study hard and become successful like my parents . 3: do simple exercise daily to keep my body in shape .",
            "url": "https://jyustin.github.io/test-fastpages/notes/2022/09/15/health.html",
            "relUrl": "/notes/2022/09/15/health.html",
            "date": " • Sep 15, 2022"
        }
        
    
  
    
        ,"post30": {
            "title": "Poem(post In Docx)",
            "content": "Either you will . go through this door . or you will not go through. . If you go through . there is always the risk . of remembering your name. . Things look at you doubly . and you must look back . and let them happen. . If you do not go through . it is possible . to live worthily . to maintain your attitudes . to hold your position . to die bravely . but much will blind you, . much will evade you, . at what cost who knows? . The door itself makes no promises. . It is only a door. .",
            "url": "https://jyustin.github.io/test-fastpages/2022/09/14/poem(post-in-docx).html",
            "relUrl": "/2022/09/14/poem(post-in-docx).html",
            "date": " • Sep 14, 2022"
        }
        
    
  
    
        ,"post31": {
            "title": "computing purpose and collaboration notes",
            "content": ". . apcsp week 4 notes . collaboration . collaboration helps to take code further . go by yourself if you want to go fast, go with others if you want to go far . pair share code: a pair works together to code. 1 person types in code, the other person comments on it . leave helpful comments on code to make it easier for others to understand . computing purpose . Computing innovation Categories applications, physical devices, systems SOCIAL MEDIA:allows people to communicate from long distances ECOMMERICE: allows user to ignore hassle of visiting store or looking for specific items . computing innovations solve problems . Computing innovations allow us to do what we would have never thought of before, solve problems or pursue interests in creative expression. . program input usually from User . Program input usually effects output. . programs accept input in different forms: . touch . audio . visual . text . ex: smartphone accepts input from touchscreen, buttons get input from touch, text (entering password) . programs written in event oriented environment . ex: what type of events can user trigger? think of things like mouse clicks, audio input, etc. . Input usually effects output, but not always. you need to sometimes do specific thing to trigger output . action may trigger event . code segments may be called by certain actions . program function . A program is only a collection of program statements that do something when run by computer . A code segment is a collection of program statements, so a code segment is part of a program . programs need to work for variety of inputs and situations . A program is a set of statements . A statement is a single command. . A group of statements is called a code segment . Program design and development . How is program developed? . start with idea . developed with specific purpose in mind . create plan. . sometimes development is exploratory. discovering the new. . developers investigate problem and reflect. investigation is important in development. . determine constraints, user concerns, requirements. . after investigating developers design program . -brainstorm ideas . -plan user experience . How is program developed? . developers decide on program requirements, then use outline to make prototype. . make sure program is tested. . refine and revise program based on reflection . test . working with others on development . program development is usually team based. . Individuals work on different components. . MAKE SURE TO CREDIT OTHERS. NAMES MUST BE WRITTEN IN DOCUMENTATION. GIVE CREDIT WHERE CREDIT IT DUE, EVEN FOR SMALL THINGS. . you can use comments to give credit . you can also use comment to notify bugs. . using other’s code segments is useful in saving time. You can use other’s code segments but you have to give credit in documentation. . Program documentation is a description of code segments, programs,and how it was developed. . Program documentation describes program, its requirements, its functions/methods, and it’s development, as well as contributors. . documentation improves productivity. it is helpful to remember things and tell others what you were thinking. . comments are the best way to do documentation. use good comments to remind yourself of stuff or help other programmers know what you were thinking . Use comments to help others who read your code . 4.1 . how do computers connect to network? . computers used to not be able to communicate along networks. now computers can send and recieve data. this data is transfered in packets. Packets have source and destination. Packets like envelopes. . packet switching: a msg is broken into packets and sent. the packets are rebuilt on the recipients device. . Bandwidth is max amount of data sent in a fixed amount of time on computer network. . Packets help move data a little bit at a time. . how does the internet work? . Protocol is agreed-upon set of rules the specify behavior of system. . protocols dictate rules for info being transferred, data goes thru layers. . Network access Layer. data hops from our computer to internet Layer Data Transmission. . Data Transmission: data goes through routers and go through paths. no definite path. . Transport Layer: TCP looks over packets fixes errors. UCP is more lax. . Application layer: ips are changed to names. . questions wrong . I got one question on the first quiz wrong because I misread the question. . I got 2 wrong on the 2nd quiz. It was sometimes hard to understand how sudo code worked and how it would run. The descriptions for the programs were also hard to understand. . I got all 3 right on the last quiz, but the 2nd question was kind of hard to understand. . .",
            "url": "https://jyustin.github.io/test-fastpages/markdown/week%203/2022/09/13/apcspnotes.html",
            "relUrl": "/markdown/week%203/2022/09/13/apcspnotes.html",
            "date": " • Sep 13, 2022"
        }
        
    
  
    
        ,"post32": {
            "title": "performance task",
            "content": "ideas for performance task: 1: simple game, perhaps snake (a line moves across a screen and grows when it passes berry units, but dies when it hits the border of the screen or hits itself) meets row 1: idea will require explaining of how code works meets row 2: requires snake data to be stored meets row 3: will need lists for berries meets row 4: will need this meets row 5: will definetly need to use some sort of algorithm for generating berries meets row 6: will need functions to work I think this is a good idea, but I feel like it will 2: tic-tac-toe against a cpu (play tic-tac-toe against a cpu that randomly selects tiles, implementing cpu could be hard) 3: text based adventure game (an adventure game based entirely on text by computer, pretty easy to build) .",
            "url": "https://jyustin.github.io/test-fastpages/markdown/week%203/2022/09/08/createperformancetask.html",
            "relUrl": "/markdown/week%203/2022/09/08/createperformancetask.html",
            "date": " • Sep 8, 2022"
        }
        
    
  
    
        ,"post33": {
            "title": "html experiment",
            "content": "my html experiments week 2 . while the theme is cool, it isn’t very functional as it is missing the links to pages in the top page. It isn’t possible to go to about me or tags or those things on this theme. The theme is also feels unprofessional, and there is a section at the top with a link to the github of the hacker theme. .",
            "url": "https://jyustin.github.io/test-fastpages/markdown/week%202/2022/08/31/html-documentation.html",
            "relUrl": "/markdown/week%202/2022/08/31/html-documentation.html",
            "date": " • Aug 31, 2022"
        }
        
    
  
    
        ,"post34": {
            "title": "md",
            "content": "week 0 . THIS IS A HEADER . this is a subheader . this is my first post using md . this is a link to ebay . this is italizized text . this is bold text . this should be a picture of an orange below . ok .",
            "url": "https://jyustin.github.io/test-fastpages/markdown/week%200/2022/08/19/md.html",
            "relUrl": "/markdown/week%200/2022/08/19/md.html",
            "date": " • Aug 19, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me (Justin)",
          "content": "Hello! my name is Justin! . I am currently taking AP CSP and this is my blog for the class. . my favorite fruit is watermelon . .",
          "url": "https://jyustin.github.io/test-fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "api",
          "content": "Here is my api work for this week: api .",
          "url": "https://jyustin.github.io/test-fastpages/apis/",
          "relUrl": "/apis/",
          "date": ""
      }
      
  

  

  
      ,"page4": {
          "title": "notes for ap csp",
          "content": "these are some notes . ###Lists and dictionaries . Lists and Dictionaries can collect information. You can add stuff to lists with .append(expression) . for_loop this is a loop that pulls data out of a list def for_loop(): print(“For loop output n”) for record in InfoDb: print_data(record) . while_loop iterates through stuff similarily to for_loop, but this time it only iterates through a set amount while loop algorithm contains an initial n and an index incrementing statement (n += 1) def while_loop(): print(“While loop output n”) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return . while_loop() . recursive loop this loops through itself by calling itself repeatedly. def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return . print(“Recursive loop output n”) recursive_loop(0) . HTML .",
          "url": "https://jyustin.github.io/test-fastpages/notes/",
          "relUrl": "/notes/",
          "date": ""
      }
      
  

  
      ,"page5": {
          "title": "personal csp progress",
          "content": "week progress . week 0 | intro to csp, tool setup, created fastpages blog | . week 1 | learned basic python, improved fastpages blog, learned bash | . week 2 | learned how to use lists and dictionaries, learned some html/css to improve blog page | .",
          "url": "https://jyustin.github.io/test-fastpages/personal-progress/",
          "relUrl": "/personal-progress/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
      ,"page10": {
          "title": "vocab for ap csp",
          "content": "| basic vocab terms | definition | |:———————-:|:———————————————————————————————————-:| | list | data type that can have data appended to it with .append(expression). | | dictionary | data type that stores data in key:value pairs | | selection | decision or question an algorithm may reach, in which case the algorithm now has options. | | Algorithm | A process or set of rules to be followed in calculations or other problem solving operations. | | iteration | when something is repeated. usually done using loops. REPEAT N TIMES is pseudocode for this. | | conditional statements | when the code acts based on different conditions based on user input or stored data. | | NESTED CONDITIONAL | conditional statement in a conditional statement | | Sequencing | when you do certain steps in order, for example, doing the first step then the second then the third, etc. | | Selection | when the programmer decides between two different outcomes. | | variable | a way of storing information in a computer program, which could later be changed, referenced, and used | | objects | a structure that can take on a data-type value | | Boolean information | | f .",
          "url": "https://jyustin.github.io/test-fastpages/vocab/",
          "relUrl": "/vocab/",
          "date": ""
      }
      
  

  
      ,"page11": {
          "title": "Javascript week 5 hack",
          "content": "Here are links to my JS/HTML hacks for week 5 . javascript program . javascript table . .",
          "url": "https://jyustin.github.io/test-fastpages/js/",
          "relUrl": "/js/",
          "date": ""
      }
      
  

  
  

  
  

  
  

  

  

  
  

  
      ,"page18": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://jyustin.github.io/test-fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}